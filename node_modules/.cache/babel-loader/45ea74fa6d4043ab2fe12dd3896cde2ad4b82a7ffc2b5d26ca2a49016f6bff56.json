{"ast":null,"code":"var _jsxFileName = \"/Users/nikodemzareba/Desktop/weather-app/weather-app-frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = ['places'];\nconst googleMapsApiKey = 'YOUR_API_KEY';\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [mapCenter, setMapCenter] = useState(null);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        if (selectedLocation) {\n          const response = await axios.get(`http://localhost:8000/api/weather/${selectedLocation}`);\n          setWeatherData(response.data);\n          updateMap(response.data.location.name);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchWeatherData();\n  }, [selectedLocation]);\n  const handleLocationChange = selectedOption => {\n    if (selectedOption) {\n      setSelectedLocation(selectedOption.value);\n    } else {\n      setSelectedLocation(null);\n    }\n  };\n  const updateMap = location => {\n    const geocoder = new google.maps.Geocoder();\n    geocoder.geocode({\n      address: location\n    }, (results, status) => {\n      if (status === google.maps.GeocoderStatus.OK && results && results[0].geometry) {\n        const lat = results[0].geometry.location.lat();\n        const lng = results[0].geometry.location.lng();\n        setMapCenter({\n          lat,\n          lng\n        });\n      }\n    });\n  };\n  const cities = [{\n    value: 'london',\n    label: 'London'\n  }, {\n    value: 'manchester',\n    label: 'Manchester'\n  }, {\n    value: 'birmingham',\n    label: 'Birmingham'\n  }, {\n    value: 'glasgow',\n    label: 'Glasgow'\n  }, {\n    value: 'liverpool',\n    label: 'Liverpool'\n  }\n  // Add more cities as needed\n  ];\n\n  const mapOptions = {\n    mapTypeControl: true,\n    mapTypeControlOptions: {\n      style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n      position: google.maps.ControlPosition.TOP_CENTER\n    },\n    styles: [\n      // Add your custom map styles here\n    ]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-dropdown\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select a location\",\n          options: cities,\n          onChange: handleLocationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), weatherData && weatherData.current ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Current Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: weatherData.location.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"temperature\",\n            children: [weatherData.current.temp_c, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"condition\",\n            children: weatherData.current.condition.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: mapCenter && /*#__PURE__*/_jsxDEV(LoadScript, {\n          googleMapsApiKey: googleMapsApiKey,\n          libraries: libraries,\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            center: mapCenter,\n            zoom: 12,\n            mapContainerStyle: {\n              height: '400px'\n            },\n            options: mapOptions,\n            children: /*#__PURE__*/_jsxDEV(Marker, {\n              position: mapCenter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Powered by React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ARumlrNmOptJOYYkp4oWCqvWiSg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Select","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","libraries","googleMapsApiKey","App","_s","weatherData","setWeatherData","selectedLocation","setSelectedLocation","mapCenter","setMapCenter","fetchWeatherData","response","get","data","updateMap","location","name","error","console","handleLocationChange","selectedOption","value","geocoder","google","maps","Geocoder","geocode","address","results","status","GeocoderStatus","OK","geometry","lat","lng","cities","label","mapOptions","mapTypeControl","mapTypeControlOptions","style","MapTypeControlStyle","HORIZONTAL_BAR","position","ControlPosition","TOP_CENTER","styles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","options","onChange","current","temp_c","condition","text","center","zoom","mapContainerStyle","height","_c","$RefreshReg$"],"sources":["/Users/nikodemzareba/Desktop/weather-app/weather-app-frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport './App.css';\n\ninterface WeatherData {\n  location: {\n    name: string;\n  };\n  current: {\n    temp_c: number;\n    condition: {\n      text: string;\n    };\n  };\n}\n\ninterface CityOption {\n  value: string;\n  label: string;\n}\n\nconst libraries: ('places' | 'drawing' | 'geometry' | 'localContext' | 'visualization')[] = ['places'];\nconst googleMapsApiKey = 'YOUR_API_KEY';\n\nconst App: React.FC = () => {\n  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);\n  const [selectedLocation, setSelectedLocation] = useState<string | null>(null);\n  const [mapCenter, setMapCenter] = useState<google.maps.LatLngLiteral | null>(null);\n\n  useEffect(() => {\n    const fetchWeatherData = async (): Promise<void> => {\n      try {\n        if (selectedLocation) {\n          const response = await axios.get<WeatherData>(`http://localhost:8000/api/weather/${selectedLocation}`);\n          setWeatherData(response.data);\n          updateMap(response.data.location.name);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchWeatherData();\n  }, [selectedLocation]);\n\n  const handleLocationChange = (selectedOption: CityOption | null) => {\n    if (selectedOption) {\n      setSelectedLocation(selectedOption.value);\n    } else {\n      setSelectedLocation(null);\n    }\n  };\n\n  const updateMap = (location: string) => {\n    const geocoder = new google.maps.Geocoder();\n    geocoder.geocode({ address: location }, (results, status) => {\n      if (status === google.maps.GeocoderStatus.OK && results && results[0].geometry) {\n        const lat = results[0].geometry.location.lat();\n        const lng = results[0].geometry.location.lng();\n        setMapCenter({ lat, lng });\n      }\n    });\n  };\n\n  const cities: CityOption[] = [\n    { value: 'london', label: 'London' },\n    { value: 'manchester', label: 'Manchester' },\n    { value: 'birmingham', label: 'Birmingham' },\n    { value: 'glasgow', label: 'Glasgow' },\n    { value: 'liverpool', label: 'Liverpool' },\n    // Add more cities as needed\n  ];\n\n  const mapOptions = {\n    mapTypeControl: true,\n    mapTypeControlOptions: {\n      style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n      position: google.maps.ControlPosition.TOP_CENTER,\n    },\n    styles: [\n      // Add your custom map styles here\n    ],\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <h1>Weather App</h1>\n      </header>\n      <main className=\"app-content\">\n        <div className=\"location-dropdown\">\n          <Select\n            placeholder=\"Select a location\"\n            options={cities}\n            onChange={handleLocationChange}\n          />\n        </div>\n        {weatherData && weatherData.current ? (\n          <div>\n            <h2>Current Weather</h2>\n            <div className=\"weather-card\">\n              <h3>{weatherData.location.name}</h3>\n              <p className=\"temperature\">{weatherData.current.temp_c}°C</p>\n              <p className=\"condition\">{weatherData.current.condition.text}</p>\n            </div>\n          </div>\n        ) : (\n          <div>Loading...</div>\n        )}\n        <div className=\"map-container\">\n          {mapCenter && (\n            <LoadScript googleMapsApiKey={googleMapsApiKey} libraries={libraries}>\n              <GoogleMap center={mapCenter} zoom={12} mapContainerStyle={{ height: '400px' }} options={mapOptions}>\n                <Marker position={mapCenter} />\n              </GoogleMap>\n            </LoadScript>\n          )}\n        </div>\n      </main>\n      <footer className=\"app-footer\">\n        <p>Powered by React</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}