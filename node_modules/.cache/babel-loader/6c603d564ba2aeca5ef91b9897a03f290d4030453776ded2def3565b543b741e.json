{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nvar countries$1 = {\n  AD: \"Andorra\",\n  AE: \"United Arab Emirates\",\n  AF: \"Afghanistan\",\n  AG: \"Antigua and Barbuda\",\n  AI: \"Anguilla\",\n  AL: \"Albania\",\n  AM: \"Armenia\",\n  AO: \"Angola\",\n  AQ: \"Antarctica\",\n  AR: \"Argentina\",\n  AS: \"American Samoa\",\n  AT: \"Austria\",\n  AU: \"Australia\",\n  AW: \"Aruba\",\n  AX: \"Åland Islands\",\n  AZ: \"Azerbaijan\",\n  BA: \"Bosnia and Herzegovina\",\n  BB: \"Barbados\",\n  BD: \"Bangladesh\",\n  BE: \"Belgium\",\n  BF: \"Burkina Faso\",\n  BG: \"Bulgaria\",\n  BH: \"Bahrain\",\n  BI: \"Burundi\",\n  BJ: \"Benin\",\n  BL: \"Saint Barthélemy\",\n  BM: \"Bermuda\",\n  BN: \"Brunei\",\n  BO: \"Bolivia\",\n  BQ: \"Caribbean Netherlands\",\n  BR: \"Brazil\",\n  BS: \"Bahamas\",\n  BT: \"Bhutan\",\n  BV: \"Bouvet Island\",\n  BW: \"Botswana\",\n  BY: \"Belarus\",\n  BZ: \"Belize\",\n  CA: \"Canada\",\n  CC: \"Cocos Islands\",\n  CD: \"Democratic Republic of the Congo\",\n  CF: \"Central African Republic\",\n  CG: \"Republic of the Congo\",\n  CH: \"Switzerland\",\n  CI: \"Ivory Coast\",\n  CK: \"Cook Islands\",\n  CL: \"Chile\",\n  CM: \"Cameroon\",\n  CN: \"China\",\n  CO: \"Colombia\",\n  CR: \"Costa Rica\",\n  CU: \"Cuba\",\n  CV: \"Cabo Verde\",\n  CW: \"Curaçao\",\n  CX: \"Christmas Island\",\n  CY: \"Cyprus\",\n  CZ: \"Czechia\",\n  DE: \"Germany\",\n  DJ: \"Djibouti\",\n  DK: \"Denmark\",\n  DM: \"Dominica\",\n  DO: \"Dominican Republic\",\n  DZ: \"Algeria\",\n  EC: \"Ecuador\",\n  EE: \"Estonia\",\n  EG: \"Egypt\",\n  EH: \"Western Sahara\",\n  ER: \"Eritrea\",\n  ES: \"Spain\",\n  ET: \"Ethiopia\",\n  FI: \"Finland\",\n  FJ: \"Fiji\",\n  FK: \"Falkland Islands\",\n  FM: \"Micronesia\",\n  FO: \"Faroe Islands\",\n  FR: \"France\",\n  GA: \"Gabon\",\n  GB: \"United Kingdom\",\n  GD: \"Grenada\",\n  GE: \"Georgia\",\n  GF: \"French Guiana\",\n  GG: \"Guernsey\",\n  GH: \"Ghana\",\n  GI: \"Gibraltar\",\n  GL: \"Greenland\",\n  GM: \"Gambia\",\n  GN: \"Guinea\",\n  GP: \"Guadeloupe\",\n  GQ: \"Equatorial Guinea\",\n  GR: \"Greece\",\n  GS: \"South Georgia and the South Sandwich Islands\",\n  GT: \"Guatemala\",\n  GU: \"Guam\",\n  GW: \"Guinea-Bissau\",\n  GY: \"Guyana\",\n  HK: \"Hong Kong\",\n  HM: \"Heard Island and McDonald Islands\",\n  HN: \"Honduras\",\n  HR: \"Croatia\",\n  HT: \"Haiti\",\n  HU: \"Hungary\",\n  ID: \"Indonesia\",\n  IE: \"Ireland\",\n  IL: \"Israel\",\n  IM: \"Isle of Man\",\n  IN: \"India\",\n  IO: \"British Indian Ocean Territory\",\n  IQ: \"Iraq\",\n  IR: \"Iran\",\n  IS: \"Iceland\",\n  IT: \"Italy\",\n  JE: \"Jersey\",\n  JM: \"Jamaica\",\n  JO: \"Jordan\",\n  JP: \"Japan\",\n  KE: \"Kenya\",\n  KG: \"Kyrgyzstan\",\n  KH: \"Cambodia\",\n  KI: \"Kiribati\",\n  KM: \"Comoros\",\n  KN: \"Saint Kitts and Nevis\",\n  KP: \"North Korea\",\n  KR: \"South Korea\",\n  KW: \"Kuwait\",\n  KY: \"Cayman Islands\",\n  KZ: \"Kazakhstan\",\n  LA: \"Laos\",\n  LB: \"Lebanon\",\n  LC: \"Saint Lucia\",\n  LI: \"Liechtenstein\",\n  LK: \"Sri Lanka\",\n  LR: \"Liberia\",\n  LS: \"Lesotho\",\n  LT: \"Lithuania\",\n  LU: \"Luxembourg\",\n  LV: \"Latvia\",\n  LY: \"Libya\",\n  MA: \"Morocco\",\n  MC: \"Monaco\",\n  MD: \"Moldova\",\n  ME: \"Montenegro\",\n  MF: \"Saint Martin\",\n  MG: \"Madagascar\",\n  MH: \"Marshall Islands\",\n  MK: \"North Macedonia\",\n  ML: \"Mali\",\n  MM: \"Myanmar\",\n  MN: \"Mongolia\",\n  MO: \"Macao\",\n  MP: \"Northern Mariana Islands\",\n  MQ: \"Martinique\",\n  MR: \"Mauritania\",\n  MS: \"Montserrat\",\n  MT: \"Malta\",\n  MU: \"Mauritius\",\n  MV: \"Maldives\",\n  MW: \"Malawi\",\n  MX: \"Mexico\",\n  MY: \"Malaysia\",\n  MZ: \"Mozambique\",\n  NA: \"Namibia\",\n  NC: \"New Caledonia\",\n  NE: \"Niger\",\n  NF: \"Norfolk Island\",\n  NG: \"Nigeria\",\n  NI: \"Nicaragua\",\n  NL: \"Netherlands\",\n  NO: \"Norway\",\n  NP: \"Nepal\",\n  NR: \"Nauru\",\n  NU: \"Niue\",\n  NZ: \"New Zealand\",\n  OM: \"Oman\",\n  PA: \"Panama\",\n  PE: \"Peru\",\n  PF: \"French Polynesia\",\n  PG: \"Papua New Guinea\",\n  PH: \"Philippines\",\n  PK: \"Pakistan\",\n  PL: \"Poland\",\n  PM: \"Saint Pierre and Miquelon\",\n  PN: \"Pitcairn\",\n  PR: \"Puerto Rico\",\n  PS: \"Palestine\",\n  PT: \"Portugal\",\n  PW: \"Palau\",\n  PY: \"Paraguay\",\n  QA: \"Qatar\",\n  RE: \"Réunion\",\n  RO: \"Romania\",\n  RS: \"Serbia\",\n  RU: \"Russia\",\n  RW: \"Rwanda\",\n  SA: \"Saudi Arabia\",\n  SB: \"Solomon Islands\",\n  SC: \"Seychelles\",\n  SD: \"Sudan\",\n  SE: \"Sweden\",\n  SG: \"Singapore\",\n  SH: \"Saint Helena, Ascension and Tristan da Cunha\",\n  SI: \"Slovenia\",\n  SJ: \"Svalbard and Jan Mayen\",\n  SK: \"Slovakia\",\n  SL: \"Sierra Leone\",\n  SM: \"San Marino\",\n  SN: \"Senegal\",\n  SO: \"Somalia\",\n  SR: \"Suriname\",\n  SS: \"South Sudan\",\n  ST: \"Sao Tome and Principe\",\n  SV: \"El Salvador\",\n  SX: \"Sint Maarten\",\n  SY: \"Syria\",\n  SZ: \"Eswatini\",\n  TC: \"Turks and Caicos Islands\",\n  TD: \"Chad\",\n  TF: \"French Southern Territories\",\n  TG: \"Togo\",\n  TH: \"Thailand\",\n  TJ: \"Tajikistan\",\n  TK: \"Tokelau\",\n  TL: \"Timor-Leste\",\n  TM: \"Turkmenistan\",\n  TN: \"Tunisia\",\n  TO: \"Tonga\",\n  TR: \"Türkiye\",\n  TT: \"Trinidad and Tobago\",\n  TV: \"Tuvalu\",\n  TW: \"Taiwan\",\n  TZ: \"Tanzania\",\n  UA: \"Ukraine\",\n  UG: \"Uganda\",\n  UM: \"United States Minor Outlying Islands\",\n  US: \"United States of America\",\n  UY: \"Uruguay\",\n  UZ: \"Uzbekistan\",\n  VA: \"Holy See\",\n  VC: \"Saint Vincent and the Grenadines\",\n  VE: \"Venezuela\",\n  VG: \"Virgin Islands (UK)\",\n  VI: \"Virgin Islands (US)\",\n  VN: \"Vietnam\",\n  VU: \"Vanuatu\",\n  WF: \"Wallis and Futuna\",\n  WS: \"Samoa\",\n  YE: \"Yemen\",\n  YT: \"Mayotte\",\n  ZA: \"South Africa\",\n  ZM: \"Zambia\",\n  ZW: \"Zimbabwe\"\n};\nvar timezones$1 = {\n  \"Africa/Abidjan\": {\n    u: 0,\n    c: [\"CI\", \"BF\", \"GH\", \"GM\", \"GN\", \"IS\", \"ML\", \"MR\", \"SH\", \"SL\", \"SN\", \"TG\"]\n  },\n  \"Africa/Accra\": {\n    a: \"Africa/Abidjan\",\n    c: [\"GH\"],\n    r: 1\n  },\n  \"Africa/Addis_Ababa\": {\n    a: \"Africa/Nairobi\",\n    c: [\"ET\"],\n    r: 1\n  },\n  \"Africa/Algiers\": {\n    u: 60,\n    c: [\"DZ\"]\n  },\n  \"Africa/Asmara\": {\n    a: \"Africa/Nairobi\",\n    c: [\"ER\"],\n    r: 1\n  },\n  \"Africa/Asmera\": {\n    a: \"Africa/Nairobi\",\n    c: [\"ER\"],\n    r: 1\n  },\n  \"Africa/Bamako\": {\n    a: \"Africa/Abidjan\",\n    c: [\"ML\"],\n    r: 1\n  },\n  \"Africa/Bangui\": {\n    a: \"Africa/Lagos\",\n    c: [\"CF\"],\n    r: 1\n  },\n  \"Africa/Banjul\": {\n    a: \"Africa/Abidjan\",\n    c: [\"GM\"],\n    r: 1\n  },\n  \"Africa/Bissau\": {\n    u: 0,\n    c: [\"GW\"]\n  },\n  \"Africa/Blantyre\": {\n    a: \"Africa/Maputo\",\n    c: [\"MW\"],\n    r: 1\n  },\n  \"Africa/Brazzaville\": {\n    a: \"Africa/Lagos\",\n    c: [\"CG\"],\n    r: 1\n  },\n  \"Africa/Bujumbura\": {\n    a: \"Africa/Maputo\",\n    c: [\"BI\"],\n    r: 1\n  },\n  \"Africa/Cairo\": {\n    u: 120,\n    c: [\"EG\"]\n  },\n  \"Africa/Casablanca\": {\n    u: 60,\n    d: 0,\n    c: [\"MA\"]\n  },\n  \"Africa/Ceuta\": {\n    u: 60,\n    d: 120,\n    c: [\"ES\"]\n  },\n  \"Africa/Conakry\": {\n    a: \"Africa/Abidjan\",\n    c: [\"GN\"],\n    r: 1\n  },\n  \"Africa/Dakar\": {\n    a: \"Africa/Abidjan\",\n    c: [\"SN\"],\n    r: 1\n  },\n  \"Africa/Dar_es_Salaam\": {\n    a: \"Africa/Nairobi\",\n    c: [\"TZ\"],\n    r: 1\n  },\n  \"Africa/Djibouti\": {\n    a: \"Africa/Nairobi\",\n    c: [\"DJ\"],\n    r: 1\n  },\n  \"Africa/Douala\": {\n    a: \"Africa/Lagos\",\n    c: [\"CM\"],\n    r: 1\n  },\n  \"Africa/El_Aaiun\": {\n    u: 60,\n    d: 0,\n    c: [\"EH\"]\n  },\n  \"Africa/Freetown\": {\n    a: \"Africa/Abidjan\",\n    c: [\"SL\"],\n    r: 1\n  },\n  \"Africa/Gaborone\": {\n    a: \"Africa/Maputo\",\n    c: [\"BW\"],\n    r: 1\n  },\n  \"Africa/Harare\": {\n    a: \"Africa/Maputo\",\n    c: [\"ZW\"],\n    r: 1\n  },\n  \"Africa/Johannesburg\": {\n    u: 120,\n    c: [\"ZA\", \"LS\", \"SZ\"]\n  },\n  \"Africa/Juba\": {\n    u: 120,\n    c: [\"SS\"]\n  },\n  \"Africa/Kampala\": {\n    a: \"Africa/Nairobi\",\n    c: [\"UG\"],\n    r: 1\n  },\n  \"Africa/Khartoum\": {\n    u: 120,\n    c: [\"SD\"]\n  },\n  \"Africa/Kigali\": {\n    a: \"Africa/Maputo\",\n    c: [\"RW\"],\n    r: 1\n  },\n  \"Africa/Kinshasa\": {\n    a: \"Africa/Lagos\",\n    c: [\"CD\"],\n    r: 1\n  },\n  \"Africa/Lagos\": {\n    u: 60,\n    c: [\"NG\", \"AO\", \"BJ\", \"CD\", \"CF\", \"CG\", \"CM\", \"GA\", \"GQ\", \"NE\"]\n  },\n  \"Africa/Libreville\": {\n    a: \"Africa/Lagos\",\n    c: [\"GA\"],\n    r: 1\n  },\n  \"Africa/Lome\": {\n    a: \"Africa/Abidjan\",\n    c: [\"TG\"],\n    r: 1\n  },\n  \"Africa/Luanda\": {\n    a: \"Africa/Lagos\",\n    c: [\"AO\"],\n    r: 1\n  },\n  \"Africa/Lubumbashi\": {\n    a: \"Africa/Maputo\",\n    c: [\"CD\"],\n    r: 1\n  },\n  \"Africa/Lusaka\": {\n    a: \"Africa/Maputo\",\n    c: [\"ZM\"],\n    r: 1\n  },\n  \"Africa/Malabo\": {\n    a: \"Africa/Lagos\",\n    c: [\"GQ\"],\n    r: 1\n  },\n  \"Africa/Maputo\": {\n    u: 120,\n    c: [\"MZ\", \"BI\", \"BW\", \"CD\", \"MW\", \"RW\", \"ZM\", \"ZW\"]\n  },\n  \"Africa/Maseru\": {\n    a: \"Africa/Johannesburg\",\n    c: [\"LS\"],\n    r: 1\n  },\n  \"Africa/Mbabane\": {\n    a: \"Africa/Johannesburg\",\n    c: [\"SZ\"],\n    r: 1\n  },\n  \"Africa/Mogadishu\": {\n    a: \"Africa/Nairobi\",\n    c: [\"SO\"],\n    r: 1\n  },\n  \"Africa/Monrovia\": {\n    u: 0,\n    c: [\"LR\"]\n  },\n  \"Africa/Nairobi\": {\n    u: 180,\n    c: [\"KE\", \"DJ\", \"ER\", \"ET\", \"KM\", \"MG\", \"SO\", \"TZ\", \"UG\", \"YT\"]\n  },\n  \"Africa/Ndjamena\": {\n    u: 60,\n    c: [\"TD\"]\n  },\n  \"Africa/Niamey\": {\n    a: \"Africa/Lagos\",\n    c: [\"NE\"],\n    r: 1\n  },\n  \"Africa/Nouakchott\": {\n    a: \"Africa/Abidjan\",\n    c: [\"MR\"],\n    r: 1\n  },\n  \"Africa/Ouagadougou\": {\n    a: \"Africa/Abidjan\",\n    c: [\"BF\"],\n    r: 1\n  },\n  \"Africa/Porto-Novo\": {\n    a: \"Africa/Lagos\",\n    c: [\"BJ\"],\n    r: 1\n  },\n  \"Africa/Sao_Tome\": {\n    u: 0,\n    c: [\"ST\"]\n  },\n  \"Africa/Timbuktu\": {\n    a: \"Africa/Abidjan\",\n    c: [\"ML\"],\n    r: 1\n  },\n  \"Africa/Tripoli\": {\n    u: 120,\n    c: [\"LY\"]\n  },\n  \"Africa/Tunis\": {\n    u: 60,\n    c: [\"TN\"]\n  },\n  \"Africa/Windhoek\": {\n    u: 120,\n    c: [\"NA\"]\n  },\n  \"America/Adak\": {\n    u: -600,\n    d: -540,\n    c: [\"US\"]\n  },\n  \"America/Anchorage\": {\n    u: -540,\n    d: -480,\n    c: [\"US\"]\n  },\n  \"America/Anguilla\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"AI\"],\n    r: 1\n  },\n  \"America/Antigua\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"AG\"],\n    r: 1\n  },\n  \"America/Araguaina\": {\n    u: -180,\n    c: [\"BR\"]\n  },\n  \"America/Argentina/Buenos_Aires\": {\n    u: -180,\n    c: [\"AR\"]\n  },\n  \"America/Argentina/Catamarca\": {\n    u: -180,\n    c: [\"AR\"]\n  },\n  \"America/Argentina/ComodRivadavia\": {\n    a: \"America/Argentina/Catamarca\",\n    r: 1\n  },\n  \"America/Argentina/Cordoba\": {\n    u: -180,\n    c: [\"AR\"]\n  },\n  \"America/Argentina/Jujuy\": {\n    u: -180,\n    c: [\"AR\"]\n  },\n  \"America/Argentina/La_Rioja\": {\n    u: -180,\n    c: [\"AR\"]\n  },\n  \"America/Argentina/Mendoza\": {\n    u: -180,\n    c: [\"AR\"]\n  },\n  \"America/Argentina/Rio_Gallegos\": {\n    u: -180,\n    c: [\"AR\"]\n  },\n  \"America/Argentina/Salta\": {\n    u: -180,\n    c: [\"AR\"]\n  },\n  \"America/Argentina/San_Juan\": {\n    u: -180,\n    c: [\"AR\"]\n  },\n  \"America/Argentina/San_Luis\": {\n    u: -180,\n    c: [\"AR\"]\n  },\n  \"America/Argentina/Tucuman\": {\n    u: -180,\n    c: [\"AR\"]\n  },\n  \"America/Argentina/Ushuaia\": {\n    u: -180,\n    c: [\"AR\"]\n  },\n  \"America/Aruba\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"AW\"],\n    r: 1\n  },\n  \"America/Asuncion\": {\n    u: -240,\n    d: -180,\n    c: [\"PY\"]\n  },\n  \"America/Atikokan\": {\n    a: \"America/Panama\",\n    c: [\"CA\"],\n    r: 1\n  },\n  \"America/Atka\": {\n    a: \"America/Adak\",\n    r: 1\n  },\n  \"America/Bahia\": {\n    u: -180,\n    c: [\"BR\"]\n  },\n  \"America/Bahia_Banderas\": {\n    u: -360,\n    c: [\"MX\"]\n  },\n  \"America/Barbados\": {\n    u: -240,\n    c: [\"BB\"]\n  },\n  \"America/Belem\": {\n    u: -180,\n    c: [\"BR\"]\n  },\n  \"America/Belize\": {\n    u: -360,\n    c: [\"BZ\"]\n  },\n  \"America/Blanc-Sablon\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"CA\"],\n    r: 1\n  },\n  \"America/Boa_Vista\": {\n    u: -240,\n    c: [\"BR\"]\n  },\n  \"America/Bogota\": {\n    u: -300,\n    c: [\"CO\"]\n  },\n  \"America/Boise\": {\n    u: -420,\n    d: -360,\n    c: [\"US\"]\n  },\n  \"America/Buenos_Aires\": {\n    a: \"America/Argentina/Buenos_Aires\",\n    r: 1\n  },\n  \"America/Cambridge_Bay\": {\n    u: -420,\n    d: -360,\n    c: [\"CA\"]\n  },\n  \"America/Campo_Grande\": {\n    u: -240,\n    c: [\"BR\"]\n  },\n  \"America/Cancun\": {\n    u: -300,\n    c: [\"MX\"]\n  },\n  \"America/Caracas\": {\n    u: -240,\n    c: [\"VE\"]\n  },\n  \"America/Catamarca\": {\n    a: \"America/Argentina/Catamarca\",\n    r: 1\n  },\n  \"America/Cayenne\": {\n    u: -180,\n    c: [\"GF\"]\n  },\n  \"America/Cayman\": {\n    a: \"America/Panama\",\n    c: [\"KY\"],\n    r: 1\n  },\n  \"America/Chicago\": {\n    u: -360,\n    d: -300,\n    c: [\"US\"]\n  },\n  \"America/Chihuahua\": {\n    u: -360,\n    c: [\"MX\"]\n  },\n  \"America/Ciudad_Juarez\": {\n    u: -420,\n    d: -360,\n    c: [\"MX\"]\n  },\n  \"America/Coral_Harbour\": {\n    a: \"America/Panama\",\n    c: [\"CA\"],\n    r: 1\n  },\n  \"America/Cordoba\": {\n    a: \"America/Argentina/Cordoba\",\n    r: 1\n  },\n  \"America/Costa_Rica\": {\n    u: -360,\n    c: [\"CR\"]\n  },\n  \"America/Creston\": {\n    a: \"America/Phoenix\",\n    c: [\"CA\"],\n    r: 1\n  },\n  \"America/Cuiaba\": {\n    u: -240,\n    c: [\"BR\"]\n  },\n  \"America/Curacao\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"CW\"],\n    r: 1\n  },\n  \"America/Danmarkshavn\": {\n    u: 0,\n    c: [\"GL\"]\n  },\n  \"America/Dawson\": {\n    u: -420,\n    c: [\"CA\"]\n  },\n  \"America/Dawson_Creek\": {\n    u: -420,\n    c: [\"CA\"]\n  },\n  \"America/Denver\": {\n    u: -420,\n    d: -360,\n    c: [\"US\"]\n  },\n  \"America/Detroit\": {\n    u: -300,\n    d: -240,\n    c: [\"US\"]\n  },\n  \"America/Dominica\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"DM\"],\n    r: 1\n  },\n  \"America/Edmonton\": {\n    u: -420,\n    d: -360,\n    c: [\"CA\"]\n  },\n  \"America/Eirunepe\": {\n    u: -300,\n    c: [\"BR\"]\n  },\n  \"America/El_Salvador\": {\n    u: -360,\n    c: [\"SV\"]\n  },\n  \"America/Ensenada\": {\n    a: \"America/Tijuana\",\n    r: 1\n  },\n  \"America/Fort_Nelson\": {\n    u: -420,\n    c: [\"CA\"]\n  },\n  \"America/Fort_Wayne\": {\n    a: \"America/Indiana/Indianapolis\",\n    r: 1\n  },\n  \"America/Fortaleza\": {\n    u: -180,\n    c: [\"BR\"]\n  },\n  \"America/Glace_Bay\": {\n    u: -240,\n    d: -180,\n    c: [\"CA\"]\n  },\n  \"America/Godthab\": {\n    a: \"America/Nuuk\",\n    r: 1\n  },\n  \"America/Goose_Bay\": {\n    u: -240,\n    d: -180,\n    c: [\"CA\"]\n  },\n  \"America/Grand_Turk\": {\n    u: -300,\n    d: -240,\n    c: [\"TC\"]\n  },\n  \"America/Grenada\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"GD\"],\n    r: 1\n  },\n  \"America/Guadeloupe\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"GP\"],\n    r: 1\n  },\n  \"America/Guatemala\": {\n    u: -360,\n    c: [\"GT\"]\n  },\n  \"America/Guayaquil\": {\n    u: -300,\n    c: [\"EC\"]\n  },\n  \"America/Guyana\": {\n    u: -240,\n    c: [\"GY\"]\n  },\n  \"America/Halifax\": {\n    u: -240,\n    d: -180,\n    c: [\"CA\"]\n  },\n  \"America/Havana\": {\n    u: -300,\n    d: -240,\n    c: [\"CU\"]\n  },\n  \"America/Hermosillo\": {\n    u: -420,\n    c: [\"MX\"]\n  },\n  \"America/Indiana/Indianapolis\": {\n    u: -300,\n    d: -240,\n    c: [\"US\"]\n  },\n  \"America/Indiana/Knox\": {\n    u: -360,\n    d: -300,\n    c: [\"US\"]\n  },\n  \"America/Indiana/Marengo\": {\n    u: -300,\n    d: -240,\n    c: [\"US\"]\n  },\n  \"America/Indiana/Petersburg\": {\n    u: -300,\n    d: -240,\n    c: [\"US\"]\n  },\n  \"America/Indiana/Tell_City\": {\n    u: -360,\n    d: -300,\n    c: [\"US\"]\n  },\n  \"America/Indiana/Vevay\": {\n    u: -300,\n    d: -240,\n    c: [\"US\"]\n  },\n  \"America/Indiana/Vincennes\": {\n    u: -300,\n    d: -240,\n    c: [\"US\"]\n  },\n  \"America/Indiana/Winamac\": {\n    u: -300,\n    d: -240,\n    c: [\"US\"]\n  },\n  \"America/Indianapolis\": {\n    a: \"America/Indiana/Indianapolis\",\n    r: 1\n  },\n  \"America/Inuvik\": {\n    u: -420,\n    d: -360,\n    c: [\"CA\"]\n  },\n  \"America/Iqaluit\": {\n    u: -300,\n    d: -240,\n    c: [\"CA\"]\n  },\n  \"America/Jamaica\": {\n    u: -300,\n    c: [\"JM\"]\n  },\n  \"America/Jujuy\": {\n    a: \"America/Argentina/Jujuy\",\n    r: 1\n  },\n  \"America/Juneau\": {\n    u: -540,\n    d: -480,\n    c: [\"US\"]\n  },\n  \"America/Kentucky/Louisville\": {\n    u: -300,\n    d: -240,\n    c: [\"US\"]\n  },\n  \"America/Kentucky/Monticello\": {\n    u: -300,\n    d: -240,\n    c: [\"US\"]\n  },\n  \"America/Knox_IN\": {\n    a: \"America/Indiana/Knox\",\n    r: 1\n  },\n  \"America/Kralendijk\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"BQ\"],\n    r: 1\n  },\n  \"America/La_Paz\": {\n    u: -240,\n    c: [\"BO\"]\n  },\n  \"America/Lima\": {\n    u: -300,\n    c: [\"PE\"]\n  },\n  \"America/Los_Angeles\": {\n    u: -480,\n    d: -420,\n    c: [\"US\"]\n  },\n  \"America/Louisville\": {\n    a: \"America/Kentucky/Louisville\",\n    r: 1\n  },\n  \"America/Lower_Princes\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"SX\"],\n    r: 1\n  },\n  \"America/Maceio\": {\n    u: -180,\n    c: [\"BR\"]\n  },\n  \"America/Managua\": {\n    u: -360,\n    c: [\"NI\"]\n  },\n  \"America/Manaus\": {\n    u: -240,\n    c: [\"BR\"]\n  },\n  \"America/Marigot\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"MF\"],\n    r: 1\n  },\n  \"America/Martinique\": {\n    u: -240,\n    c: [\"MQ\"]\n  },\n  \"America/Matamoros\": {\n    u: -360,\n    d: -300,\n    c: [\"MX\"]\n  },\n  \"America/Mazatlan\": {\n    u: -420,\n    c: [\"MX\"]\n  },\n  \"America/Mendoza\": {\n    a: \"America/Argentina/Mendoza\",\n    r: 1\n  },\n  \"America/Menominee\": {\n    u: -360,\n    d: -300,\n    c: [\"US\"]\n  },\n  \"America/Merida\": {\n    u: -360,\n    c: [\"MX\"]\n  },\n  \"America/Metlakatla\": {\n    u: -540,\n    d: -480,\n    c: [\"US\"]\n  },\n  \"America/Mexico_City\": {\n    u: -360,\n    c: [\"MX\"]\n  },\n  \"America/Miquelon\": {\n    u: -180,\n    d: -120,\n    c: [\"PM\"]\n  },\n  \"America/Moncton\": {\n    u: -240,\n    d: -180,\n    c: [\"CA\"]\n  },\n  \"America/Monterrey\": {\n    u: -360,\n    c: [\"MX\"]\n  },\n  \"America/Montevideo\": {\n    u: -180,\n    c: [\"UY\"]\n  },\n  \"America/Montreal\": {\n    a: \"America/Toronto\",\n    c: [\"CA\"],\n    r: 1\n  },\n  \"America/Montserrat\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"MS\"],\n    r: 1\n  },\n  \"America/Nassau\": {\n    a: \"America/Toronto\",\n    c: [\"BS\"],\n    r: 1\n  },\n  \"America/New_York\": {\n    u: -300,\n    d: -240,\n    c: [\"US\"]\n  },\n  \"America/Nipigon\": {\n    a: \"America/Toronto\",\n    c: [\"CA\"],\n    r: 1\n  },\n  \"America/Nome\": {\n    u: -540,\n    d: -480,\n    c: [\"US\"]\n  },\n  \"America/Noronha\": {\n    u: -120,\n    c: [\"BR\"]\n  },\n  \"America/North_Dakota/Beulah\": {\n    u: -360,\n    d: -300,\n    c: [\"US\"]\n  },\n  \"America/North_Dakota/Center\": {\n    u: -360,\n    d: -300,\n    c: [\"US\"]\n  },\n  \"America/North_Dakota/New_Salem\": {\n    u: -360,\n    d: -300,\n    c: [\"US\"]\n  },\n  \"America/Nuuk\": {\n    u: -180,\n    c: [\"GL\"]\n  },\n  \"America/Ojinaga\": {\n    u: -360,\n    d: -300,\n    c: [\"MX\"]\n  },\n  \"America/Panama\": {\n    u: -300,\n    c: [\"PA\", \"CA\", \"KY\"]\n  },\n  \"America/Pangnirtung\": {\n    a: \"America/Iqaluit\",\n    r: 1\n  },\n  \"America/Paramaribo\": {\n    u: -180,\n    c: [\"SR\"]\n  },\n  \"America/Phoenix\": {\n    u: -420,\n    c: [\"US\", \"CA\"]\n  },\n  \"America/Port-au-Prince\": {\n    u: -300,\n    d: -240,\n    c: [\"HT\"]\n  },\n  \"America/Port_of_Spain\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"TT\"],\n    r: 1\n  },\n  \"America/Porto_Acre\": {\n    a: \"America/Rio_Branco\",\n    r: 1\n  },\n  \"America/Porto_Velho\": {\n    u: -240,\n    c: [\"BR\"]\n  },\n  \"America/Puerto_Rico\": {\n    u: -240,\n    c: [\"PR\", \"AG\", \"CA\", \"AI\", \"AW\", \"BL\", \"BQ\", \"CW\", \"DM\", \"GD\", \"GP\", \"KN\", \"LC\", \"MF\", \"MS\", \"SX\", \"TT\", \"VC\", \"VG\", \"VI\"]\n  },\n  \"America/Punta_Arenas\": {\n    u: -180,\n    c: [\"CL\"]\n  },\n  \"America/Rainy_River\": {\n    a: \"America/Winnipeg\",\n    r: 1\n  },\n  \"America/Rankin_Inlet\": {\n    u: -360,\n    d: -300,\n    c: [\"CA\"]\n  },\n  \"America/Recife\": {\n    u: -180,\n    c: [\"BR\"]\n  },\n  \"America/Regina\": {\n    u: -360,\n    c: [\"CA\"]\n  },\n  \"America/Resolute\": {\n    u: -360,\n    d: -300,\n    c: [\"CA\"]\n  },\n  \"America/Rio_Branco\": {\n    u: -300,\n    c: [\"BR\"]\n  },\n  \"America/Rosario\": {\n    a: \"America/Argentina/Cordoba\",\n    r: 1\n  },\n  \"America/Santa_Isabel\": {\n    a: \"America/Tijuana\",\n    r: 1\n  },\n  \"America/Santarem\": {\n    u: -180,\n    c: [\"BR\"]\n  },\n  \"America/Santiago\": {\n    u: -240,\n    d: -180,\n    c: [\"CL\"]\n  },\n  \"America/Santo_Domingo\": {\n    u: -240,\n    c: [\"DO\"]\n  },\n  \"America/Sao_Paulo\": {\n    u: -180,\n    c: [\"BR\"]\n  },\n  \"America/Scoresbysund\": {\n    u: -60,\n    d: 0,\n    c: [\"GL\"]\n  },\n  \"America/Shiprock\": {\n    a: \"America/Denver\",\n    r: 1\n  },\n  \"America/Sitka\": {\n    u: -540,\n    d: -480,\n    c: [\"US\"]\n  },\n  \"America/St_Barthelemy\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"BL\"],\n    r: 1\n  },\n  \"America/St_Johns\": {\n    u: -210,\n    d: -150,\n    c: [\"CA\"]\n  },\n  \"America/St_Kitts\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"KN\"],\n    r: 1\n  },\n  \"America/St_Lucia\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"LC\"],\n    r: 1\n  },\n  \"America/St_Thomas\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"VI\"],\n    r: 1\n  },\n  \"America/St_Vincent\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"VC\"],\n    r: 1\n  },\n  \"America/Swift_Current\": {\n    u: -360,\n    c: [\"CA\"]\n  },\n  \"America/Tegucigalpa\": {\n    u: -360,\n    c: [\"HN\"]\n  },\n  \"America/Thule\": {\n    u: -240,\n    d: -180,\n    c: [\"GL\"]\n  },\n  \"America/Thunder_Bay\": {\n    a: \"America/Toronto\",\n    c: [\"CA\"],\n    r: 1\n  },\n  \"America/Tijuana\": {\n    u: -480,\n    d: -420,\n    c: [\"MX\"]\n  },\n  \"America/Toronto\": {\n    u: -300,\n    d: -240,\n    c: [\"CA\", \"BS\"]\n  },\n  \"America/Tortola\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"VG\"],\n    r: 1\n  },\n  \"America/Vancouver\": {\n    u: -480,\n    d: -420,\n    c: [\"CA\"]\n  },\n  \"America/Virgin\": {\n    a: \"America/Puerto_Rico\",\n    c: [\"VI\"],\n    r: 1\n  },\n  \"America/Whitehorse\": {\n    u: -420,\n    c: [\"CA\"]\n  },\n  \"America/Winnipeg\": {\n    u: -360,\n    d: -300,\n    c: [\"CA\"]\n  },\n  \"America/Yakutat\": {\n    u: -540,\n    d: -480,\n    c: [\"US\"]\n  },\n  \"America/Yellowknife\": {\n    u: -420,\n    d: -360,\n    c: [\"CA\"]\n  },\n  \"Antarctica/Casey\": {\n    u: 660,\n    c: [\"AQ\"]\n  },\n  \"Antarctica/Davis\": {\n    u: 420,\n    c: [\"AQ\"]\n  },\n  \"Antarctica/DumontDUrville\": {\n    a: \"Pacific/Port_Moresby\",\n    c: [\"AQ\"],\n    r: 1\n  },\n  \"Antarctica/Macquarie\": {\n    u: 600,\n    d: 660,\n    c: [\"AU\"]\n  },\n  \"Antarctica/Mawson\": {\n    u: 300,\n    c: [\"AQ\"]\n  },\n  \"Antarctica/McMurdo\": {\n    a: \"Pacific/Auckland\",\n    c: [\"AQ\"],\n    r: 1\n  },\n  \"Antarctica/Palmer\": {\n    u: -180,\n    c: [\"AQ\"]\n  },\n  \"Antarctica/Rothera\": {\n    u: -180,\n    c: [\"AQ\"]\n  },\n  \"Antarctica/South_Pole\": {\n    a: \"Pacific/Auckland\",\n    c: [\"AQ\"],\n    r: 1\n  },\n  \"Antarctica/Syowa\": {\n    a: \"Asia/Riyadh\",\n    c: [\"AQ\"],\n    r: 1\n  },\n  \"Antarctica/Troll\": {\n    u: 0,\n    d: 120,\n    c: [\"AQ\"]\n  },\n  \"Antarctica/Vostok\": {\n    a: \"Asia/Urumqi\",\n    c: [\"AQ\"],\n    r: 1\n  },\n  \"Arctic/Longyearbyen\": {\n    a: \"Europe/Berlin\",\n    c: [\"SJ\"],\n    r: 1\n  },\n  \"Asia/Aden\": {\n    a: \"Asia/Riyadh\",\n    c: [\"YE\"],\n    r: 1\n  },\n  \"Asia/Almaty\": {\n    u: 360,\n    c: [\"KZ\"]\n  },\n  \"Asia/Amman\": {\n    u: 180,\n    c: [\"JO\"]\n  },\n  \"Asia/Anadyr\": {\n    u: 720,\n    c: [\"RU\"]\n  },\n  \"Asia/Aqtau\": {\n    u: 300,\n    c: [\"KZ\"]\n  },\n  \"Asia/Aqtobe\": {\n    u: 300,\n    c: [\"KZ\"]\n  },\n  \"Asia/Ashgabat\": {\n    u: 300,\n    c: [\"TM\"]\n  },\n  \"Asia/Ashkhabad\": {\n    a: \"Asia/Ashgabat\",\n    r: 1\n  },\n  \"Asia/Atyrau\": {\n    u: 300,\n    c: [\"KZ\"]\n  },\n  \"Asia/Baghdad\": {\n    u: 180,\n    c: [\"IQ\"]\n  },\n  \"Asia/Bahrain\": {\n    a: \"Asia/Qatar\",\n    c: [\"BH\"],\n    r: 1\n  },\n  \"Asia/Baku\": {\n    u: 240,\n    c: [\"AZ\"]\n  },\n  \"Asia/Bangkok\": {\n    u: 420,\n    c: [\"TH\", \"CX\", \"KH\", \"LA\", \"VN\"]\n  },\n  \"Asia/Barnaul\": {\n    u: 420,\n    c: [\"RU\"]\n  },\n  \"Asia/Beirut\": {\n    u: 120,\n    d: 180,\n    c: [\"LB\"]\n  },\n  \"Asia/Bishkek\": {\n    u: 360,\n    c: [\"KG\"]\n  },\n  \"Asia/Brunei\": {\n    a: \"Asia/Kuching\",\n    c: [\"BN\"],\n    r: 1\n  },\n  \"Asia/Calcutta\": {\n    a: \"Asia/Kolkata\",\n    r: 1\n  },\n  \"Asia/Chita\": {\n    u: 540,\n    c: [\"RU\"]\n  },\n  \"Asia/Choibalsan\": {\n    u: 480,\n    c: [\"MN\"]\n  },\n  \"Asia/Chongqing\": {\n    a: \"Asia/Shanghai\",\n    r: 1\n  },\n  \"Asia/Chungking\": {\n    a: \"Asia/Shanghai\",\n    r: 1\n  },\n  \"Asia/Colombo\": {\n    u: 330,\n    c: [\"LK\"]\n  },\n  \"Asia/Dacca\": {\n    a: \"Asia/Dhaka\",\n    r: 1\n  },\n  \"Asia/Damascus\": {\n    u: 180,\n    c: [\"SY\"]\n  },\n  \"Asia/Dhaka\": {\n    u: 360,\n    c: [\"BD\"]\n  },\n  \"Asia/Dili\": {\n    u: 540,\n    c: [\"TL\"]\n  },\n  \"Asia/Dubai\": {\n    u: 240,\n    c: [\"AE\", \"OM\", \"RE\", \"SC\", \"TF\"]\n  },\n  \"Asia/Dushanbe\": {\n    u: 300,\n    c: [\"TJ\"]\n  },\n  \"Asia/Famagusta\": {\n    u: 120,\n    d: 180,\n    c: [\"CY\"]\n  },\n  \"Asia/Gaza\": {\n    u: 120,\n    d: 180,\n    c: [\"PS\"]\n  },\n  \"Asia/Harbin\": {\n    a: \"Asia/Shanghai\",\n    r: 1\n  },\n  \"Asia/Hebron\": {\n    u: 120,\n    d: 180,\n    c: [\"PS\"]\n  },\n  \"Asia/Ho_Chi_Minh\": {\n    u: 420,\n    c: [\"VN\"]\n  },\n  \"Asia/Hong_Kong\": {\n    u: 480,\n    c: [\"HK\"]\n  },\n  \"Asia/Hovd\": {\n    u: 420,\n    c: [\"MN\"]\n  },\n  \"Asia/Irkutsk\": {\n    u: 480,\n    c: [\"RU\"]\n  },\n  \"Asia/Istanbul\": {\n    a: \"Europe/Istanbul\",\n    r: 1\n  },\n  \"Asia/Jakarta\": {\n    u: 420,\n    c: [\"ID\"]\n  },\n  \"Asia/Jayapura\": {\n    u: 540,\n    c: [\"ID\"]\n  },\n  \"Asia/Jerusalem\": {\n    u: 120,\n    d: 180,\n    c: [\"IL\"]\n  },\n  \"Asia/Kabul\": {\n    u: 270,\n    c: [\"AF\"]\n  },\n  \"Asia/Kamchatka\": {\n    u: 720,\n    c: [\"RU\"]\n  },\n  \"Asia/Karachi\": {\n    u: 300,\n    c: [\"PK\"]\n  },\n  \"Asia/Kashgar\": {\n    a: \"Asia/Urumqi\",\n    c: [\"CN\"],\n    r: 1\n  },\n  \"Asia/Kathmandu\": {\n    u: 345,\n    c: [\"NP\"]\n  },\n  \"Asia/Katmandu\": {\n    a: \"Asia/Kathmandu\",\n    r: 1\n  },\n  \"Asia/Khandyga\": {\n    u: 540,\n    c: [\"RU\"]\n  },\n  \"Asia/Kolkata\": {\n    u: 330,\n    c: [\"IN\"]\n  },\n  \"Asia/Krasnoyarsk\": {\n    u: 420,\n    c: [\"RU\"]\n  },\n  \"Asia/Kuala_Lumpur\": {\n    a: \"Asia/Singapore\",\n    c: [\"MY\"],\n    r: 1\n  },\n  \"Asia/Kuching\": {\n    u: 480,\n    c: [\"MY\", \"BN\"]\n  },\n  \"Asia/Kuwait\": {\n    a: \"Asia/Riyadh\",\n    c: [\"KW\"],\n    r: 1\n  },\n  \"Asia/Macao\": {\n    a: \"Asia/Macau\",\n    r: 1\n  },\n  \"Asia/Macau\": {\n    u: 480,\n    c: [\"MO\"]\n  },\n  \"Asia/Magadan\": {\n    u: 660,\n    c: [\"RU\"]\n  },\n  \"Asia/Makassar\": {\n    u: 480,\n    c: [\"ID\"]\n  },\n  \"Asia/Manila\": {\n    u: 480,\n    c: [\"PH\"]\n  },\n  \"Asia/Muscat\": {\n    a: \"Asia/Dubai\",\n    c: [\"OM\"],\n    r: 1\n  },\n  \"Asia/Nicosia\": {\n    u: 120,\n    d: 180,\n    c: [\"CY\"]\n  },\n  \"Asia/Novokuznetsk\": {\n    u: 420,\n    c: [\"RU\"]\n  },\n  \"Asia/Novosibirsk\": {\n    u: 420,\n    c: [\"RU\"]\n  },\n  \"Asia/Omsk\": {\n    u: 360,\n    c: [\"RU\"]\n  },\n  \"Asia/Oral\": {\n    u: 300,\n    c: [\"KZ\"]\n  },\n  \"Asia/Phnom_Penh\": {\n    a: \"Asia/Bangkok\",\n    c: [\"KH\"],\n    r: 1\n  },\n  \"Asia/Pontianak\": {\n    u: 420,\n    c: [\"ID\"]\n  },\n  \"Asia/Pyongyang\": {\n    u: 540,\n    c: [\"KP\"]\n  },\n  \"Asia/Qatar\": {\n    u: 180,\n    c: [\"QA\", \"BH\"]\n  },\n  \"Asia/Qostanay\": {\n    u: 360,\n    c: [\"KZ\"]\n  },\n  \"Asia/Qyzylorda\": {\n    u: 300,\n    c: [\"KZ\"]\n  },\n  \"Asia/Rangoon\": {\n    a: \"Asia/Yangon\",\n    c: [\"MM\"],\n    r: 1\n  },\n  \"Asia/Riyadh\": {\n    u: 180,\n    c: [\"SA\", \"AQ\", \"KW\", \"YE\"]\n  },\n  \"Asia/Saigon\": {\n    a: \"Asia/Ho_Chi_Minh\",\n    r: 1\n  },\n  \"Asia/Sakhalin\": {\n    u: 660,\n    c: [\"RU\"]\n  },\n  \"Asia/Samarkand\": {\n    u: 300,\n    c: [\"UZ\"]\n  },\n  \"Asia/Seoul\": {\n    u: 540,\n    c: [\"KR\"]\n  },\n  \"Asia/Shanghai\": {\n    u: 480,\n    c: [\"CN\"]\n  },\n  \"Asia/Singapore\": {\n    u: 480,\n    c: [\"SG\", \"MY\"]\n  },\n  \"Asia/Srednekolymsk\": {\n    u: 660,\n    c: [\"RU\"]\n  },\n  \"Asia/Taipei\": {\n    u: 480,\n    c: [\"TW\"]\n  },\n  \"Asia/Tashkent\": {\n    u: 300,\n    c: [\"UZ\"]\n  },\n  \"Asia/Tbilisi\": {\n    u: 240,\n    c: [\"GE\"]\n  },\n  \"Asia/Tehran\": {\n    u: 210,\n    c: [\"IR\"]\n  },\n  \"Asia/Tel_Aviv\": {\n    a: \"Asia/Jerusalem\",\n    r: 1\n  },\n  \"Asia/Thimbu\": {\n    a: \"Asia/Thimphu\",\n    r: 1\n  },\n  \"Asia/Thimphu\": {\n    u: 360,\n    c: [\"BT\"]\n  },\n  \"Asia/Tokyo\": {\n    u: 540,\n    c: [\"JP\"]\n  },\n  \"Asia/Tomsk\": {\n    u: 420,\n    c: [\"RU\"]\n  },\n  \"Asia/Ujung_Pandang\": {\n    a: \"Asia/Makassar\",\n    r: 1\n  },\n  \"Asia/Ulaanbaatar\": {\n    u: 480,\n    c: [\"MN\"]\n  },\n  \"Asia/Ulan_Bator\": {\n    a: \"Asia/Ulaanbaatar\",\n    r: 1\n  },\n  \"Asia/Urumqi\": {\n    u: 360,\n    c: [\"CN\", \"AQ\"]\n  },\n  \"Asia/Ust-Nera\": {\n    u: 600,\n    c: [\"RU\"]\n  },\n  \"Asia/Vientiane\": {\n    a: \"Asia/Bangkok\",\n    c: [\"LA\"],\n    r: 1\n  },\n  \"Asia/Vladivostok\": {\n    u: 600,\n    c: [\"RU\"]\n  },\n  \"Asia/Yakutsk\": {\n    u: 540,\n    c: [\"RU\"]\n  },\n  \"Asia/Yangon\": {\n    u: 390,\n    c: [\"MM\", \"CC\"]\n  },\n  \"Asia/Yekaterinburg\": {\n    u: 300,\n    c: [\"RU\"]\n  },\n  \"Asia/Yerevan\": {\n    u: 240,\n    c: [\"AM\"]\n  },\n  \"Atlantic/Azores\": {\n    u: -60,\n    d: 0,\n    c: [\"PT\"]\n  },\n  \"Atlantic/Bermuda\": {\n    u: -240,\n    d: -180,\n    c: [\"BM\"]\n  },\n  \"Atlantic/Canary\": {\n    u: 0,\n    d: 60,\n    c: [\"ES\"]\n  },\n  \"Atlantic/Cape_Verde\": {\n    u: -60,\n    c: [\"CV\"]\n  },\n  \"Atlantic/Faeroe\": {\n    a: \"Atlantic/Faroe\",\n    r: 1\n  },\n  \"Atlantic/Faroe\": {\n    u: 0,\n    d: 60,\n    c: [\"FO\"]\n  },\n  \"Atlantic/Jan_Mayen\": {\n    a: \"Europe/Berlin\",\n    c: [\"SJ\"],\n    r: 1\n  },\n  \"Atlantic/Madeira\": {\n    u: 0,\n    d: 60,\n    c: [\"PT\"]\n  },\n  \"Atlantic/Reykjavik\": {\n    a: \"Africa/Abidjan\",\n    c: [\"IS\"],\n    r: 1\n  },\n  \"Atlantic/South_Georgia\": {\n    u: -120,\n    c: [\"GS\"]\n  },\n  \"Atlantic/St_Helena\": {\n    a: \"Africa/Abidjan\",\n    c: [\"SH\"],\n    r: 1\n  },\n  \"Atlantic/Stanley\": {\n    u: -180,\n    c: [\"FK\"]\n  },\n  \"Australia/ACT\": {\n    a: \"Australia/Sydney\",\n    r: 1\n  },\n  \"Australia/Adelaide\": {\n    u: 570,\n    d: 630,\n    c: [\"AU\"]\n  },\n  \"Australia/Brisbane\": {\n    u: 600,\n    c: [\"AU\"]\n  },\n  \"Australia/Broken_Hill\": {\n    u: 570,\n    d: 630,\n    c: [\"AU\"]\n  },\n  \"Australia/Canberra\": {\n    a: \"Australia/Sydney\",\n    r: 1\n  },\n  \"Australia/Currie\": {\n    a: \"Australia/Hobart\",\n    r: 1\n  },\n  \"Australia/Darwin\": {\n    u: 570,\n    c: [\"AU\"]\n  },\n  \"Australia/Eucla\": {\n    u: 525,\n    c: [\"AU\"]\n  },\n  \"Australia/Hobart\": {\n    u: 600,\n    d: 660,\n    c: [\"AU\"]\n  },\n  \"Australia/LHI\": {\n    a: \"Australia/Lord_Howe\",\n    r: 1\n  },\n  \"Australia/Lindeman\": {\n    u: 600,\n    c: [\"AU\"]\n  },\n  \"Australia/Lord_Howe\": {\n    u: 630,\n    d: 660,\n    c: [\"AU\"]\n  },\n  \"Australia/Melbourne\": {\n    u: 600,\n    d: 660,\n    c: [\"AU\"]\n  },\n  \"Australia/NSW\": {\n    a: \"Australia/Sydney\",\n    r: 1\n  },\n  \"Australia/North\": {\n    a: \"Australia/Darwin\",\n    r: 1\n  },\n  \"Australia/Perth\": {\n    u: 480,\n    c: [\"AU\"]\n  },\n  \"Australia/Queensland\": {\n    a: \"Australia/Brisbane\",\n    r: 1\n  },\n  \"Australia/South\": {\n    a: \"Australia/Adelaide\",\n    r: 1\n  },\n  \"Australia/Sydney\": {\n    u: 600,\n    d: 660,\n    c: [\"AU\"]\n  },\n  \"Australia/Tasmania\": {\n    a: \"Australia/Hobart\",\n    r: 1\n  },\n  \"Australia/Victoria\": {\n    a: \"Australia/Melbourne\",\n    r: 1\n  },\n  \"Australia/West\": {\n    a: \"Australia/Perth\",\n    r: 1\n  },\n  \"Australia/Yancowinna\": {\n    a: \"Australia/Broken_Hill\",\n    r: 1\n  },\n  \"Brazil/Acre\": {\n    a: \"America/Rio_Branco\",\n    r: 1\n  },\n  \"Brazil/DeNoronha\": {\n    a: \"America/Noronha\",\n    r: 1\n  },\n  \"Brazil/East\": {\n    a: \"America/Sao_Paulo\",\n    r: 1\n  },\n  \"Brazil/West\": {\n    a: \"America/Manaus\",\n    r: 1\n  },\n  CET: {\n    u: 60,\n    d: 120\n  },\n  CST6CDT: {\n    u: -360,\n    d: -300\n  },\n  \"Canada/Atlantic\": {\n    a: \"America/Halifax\",\n    r: 1\n  },\n  \"Canada/Central\": {\n    a: \"America/Winnipeg\",\n    r: 1\n  },\n  \"Canada/Eastern\": {\n    a: \"America/Toronto\",\n    c: [\"CA\"],\n    r: 1\n  },\n  \"Canada/Mountain\": {\n    a: \"America/Edmonton\",\n    r: 1\n  },\n  \"Canada/Newfoundland\": {\n    a: \"America/St_Johns\",\n    r: 1\n  },\n  \"Canada/Pacific\": {\n    a: \"America/Vancouver\",\n    r: 1\n  },\n  \"Canada/Saskatchewan\": {\n    a: \"America/Regina\",\n    r: 1\n  },\n  \"Canada/Yukon\": {\n    a: \"America/Whitehorse\",\n    r: 1\n  },\n  \"Chile/Continental\": {\n    a: \"America/Santiago\",\n    r: 1\n  },\n  \"Chile/EasterIsland\": {\n    a: \"Pacific/Easter\",\n    r: 1\n  },\n  Cuba: {\n    a: \"America/Havana\",\n    r: 1\n  },\n  EET: {\n    u: 120,\n    d: 180\n  },\n  EST: {\n    u: -300\n  },\n  EST5EDT: {\n    u: -300,\n    d: -240\n  },\n  Egypt: {\n    a: \"Africa/Cairo\",\n    r: 1\n  },\n  Eire: {\n    a: \"Europe/Dublin\",\n    r: 1\n  },\n  \"Etc/GMT\": {\n    u: 0\n  },\n  \"Etc/GMT+0\": {\n    a: \"Etc/GMT\",\n    r: 1\n  },\n  \"Etc/GMT+1\": {\n    u: -60\n  },\n  \"Etc/GMT+10\": {\n    u: -600\n  },\n  \"Etc/GMT+11\": {\n    u: -660\n  },\n  \"Etc/GMT+12\": {\n    u: -720\n  },\n  \"Etc/GMT+2\": {\n    u: -120\n  },\n  \"Etc/GMT+3\": {\n    u: -180\n  },\n  \"Etc/GMT+4\": {\n    u: -240\n  },\n  \"Etc/GMT+5\": {\n    u: -300\n  },\n  \"Etc/GMT+6\": {\n    u: -360\n  },\n  \"Etc/GMT+7\": {\n    u: -420\n  },\n  \"Etc/GMT+8\": {\n    u: -480\n  },\n  \"Etc/GMT+9\": {\n    u: -540\n  },\n  \"Etc/GMT-0\": {\n    a: \"Etc/GMT\",\n    r: 1\n  },\n  \"Etc/GMT-1\": {\n    u: 60\n  },\n  \"Etc/GMT-10\": {\n    u: 600\n  },\n  \"Etc/GMT-11\": {\n    u: 660\n  },\n  \"Etc/GMT-12\": {\n    u: 720\n  },\n  \"Etc/GMT-13\": {\n    u: 780\n  },\n  \"Etc/GMT-14\": {\n    u: 840\n  },\n  \"Etc/GMT-2\": {\n    u: 120\n  },\n  \"Etc/GMT-3\": {\n    u: 180\n  },\n  \"Etc/GMT-4\": {\n    u: 240\n  },\n  \"Etc/GMT-5\": {\n    u: 300\n  },\n  \"Etc/GMT-6\": {\n    u: 360\n  },\n  \"Etc/GMT-7\": {\n    u: 420\n  },\n  \"Etc/GMT-8\": {\n    u: 480\n  },\n  \"Etc/GMT-9\": {\n    u: 540\n  },\n  \"Etc/GMT0\": {\n    a: \"Etc/GMT\",\n    r: 1\n  },\n  \"Etc/Greenwich\": {\n    a: \"Etc/GMT\",\n    r: 1\n  },\n  \"Etc/UCT\": {\n    a: \"Etc/UTC\",\n    r: 1\n  },\n  \"Etc/UTC\": {\n    u: 0\n  },\n  \"Etc/Universal\": {\n    a: \"Etc/UTC\",\n    r: 1\n  },\n  \"Etc/Zulu\": {\n    a: \"Etc/UTC\",\n    r: 1\n  },\n  \"Europe/Amsterdam\": {\n    a: \"Europe/Brussels\",\n    c: [\"NL\"],\n    r: 1\n  },\n  \"Europe/Andorra\": {\n    u: 60,\n    d: 120,\n    c: [\"AD\"]\n  },\n  \"Europe/Astrakhan\": {\n    u: 240,\n    c: [\"RU\"]\n  },\n  \"Europe/Athens\": {\n    u: 120,\n    d: 180,\n    c: [\"GR\"]\n  },\n  \"Europe/Belfast\": {\n    a: \"Europe/London\",\n    c: [\"GB\"],\n    r: 1\n  },\n  \"Europe/Belgrade\": {\n    u: 60,\n    d: 120,\n    c: [\"RS\", \"BA\", \"HR\", \"ME\", \"MK\", \"SI\"]\n  },\n  \"Europe/Berlin\": {\n    u: 60,\n    d: 120,\n    c: [\"DE\", \"DK\", \"NO\", \"SE\", \"SJ\"]\n  },\n  \"Europe/Bratislava\": {\n    a: \"Europe/Prague\",\n    c: [\"SK\"],\n    r: 1\n  },\n  \"Europe/Brussels\": {\n    u: 60,\n    d: 120,\n    c: [\"BE\", \"LU\", \"NL\"]\n  },\n  \"Europe/Bucharest\": {\n    u: 120,\n    d: 180,\n    c: [\"RO\"]\n  },\n  \"Europe/Budapest\": {\n    u: 60,\n    d: 120,\n    c: [\"HU\"]\n  },\n  \"Europe/Busingen\": {\n    a: \"Europe/Zurich\",\n    c: [\"DE\"],\n    r: 1\n  },\n  \"Europe/Chisinau\": {\n    u: 120,\n    d: 180,\n    c: [\"MD\"]\n  },\n  \"Europe/Copenhagen\": {\n    a: \"Europe/Berlin\",\n    c: [\"DK\"],\n    r: 1\n  },\n  \"Europe/Dublin\": {\n    u: 60,\n    d: 0,\n    c: [\"IE\"]\n  },\n  \"Europe/Gibraltar\": {\n    u: 60,\n    d: 120,\n    c: [\"GI\"]\n  },\n  \"Europe/Guernsey\": {\n    a: \"Europe/London\",\n    c: [\"GG\"],\n    r: 1\n  },\n  \"Europe/Helsinki\": {\n    u: 120,\n    d: 180,\n    c: [\"FI\", \"AX\"]\n  },\n  \"Europe/Isle_of_Man\": {\n    a: \"Europe/London\",\n    c: [\"IM\"],\n    r: 1\n  },\n  \"Europe/Istanbul\": {\n    u: 180,\n    c: [\"TR\"]\n  },\n  \"Europe/Jersey\": {\n    a: \"Europe/London\",\n    c: [\"JE\"],\n    r: 1\n  },\n  \"Europe/Kaliningrad\": {\n    u: 120,\n    c: [\"RU\"]\n  },\n  \"Europe/Kiev\": {\n    a: \"Europe/Kyiv\",\n    r: 1\n  },\n  \"Europe/Kirov\": {\n    u: 180,\n    c: [\"RU\"]\n  },\n  \"Europe/Kyiv\": {\n    u: 120,\n    d: 180,\n    c: [\"UA\"]\n  },\n  \"Europe/Lisbon\": {\n    u: 0,\n    d: 60,\n    c: [\"PT\"]\n  },\n  \"Europe/Ljubljana\": {\n    a: \"Europe/Belgrade\",\n    c: [\"SI\"],\n    r: 1\n  },\n  \"Europe/London\": {\n    u: 0,\n    d: 60,\n    c: [\"GB\", \"GG\", \"IM\", \"JE\"]\n  },\n  \"Europe/Luxembourg\": {\n    a: \"Europe/Brussels\",\n    c: [\"LU\"],\n    r: 1\n  },\n  \"Europe/Madrid\": {\n    u: 60,\n    d: 120,\n    c: [\"ES\"]\n  },\n  \"Europe/Malta\": {\n    u: 60,\n    d: 120,\n    c: [\"MT\"]\n  },\n  \"Europe/Mariehamn\": {\n    a: \"Europe/Helsinki\",\n    c: [\"AX\"],\n    r: 1\n  },\n  \"Europe/Minsk\": {\n    u: 180,\n    c: [\"BY\"]\n  },\n  \"Europe/Monaco\": {\n    a: \"Europe/Paris\",\n    c: [\"MC\"],\n    r: 1\n  },\n  \"Europe/Moscow\": {\n    u: 180,\n    c: [\"RU\"]\n  },\n  \"Europe/Nicosia\": {\n    a: \"Asia/Nicosia\",\n    r: 1\n  },\n  \"Europe/Oslo\": {\n    a: \"Europe/Berlin\",\n    c: [\"NO\", \"BV\"],\n    r: 1\n  },\n  \"Europe/Paris\": {\n    u: 60,\n    d: 120,\n    c: [\"FR\", \"MC\"]\n  },\n  \"Europe/Podgorica\": {\n    a: \"Europe/Belgrade\",\n    c: [\"ME\"],\n    r: 1\n  },\n  \"Europe/Prague\": {\n    u: 60,\n    d: 120,\n    c: [\"CZ\", \"SK\"]\n  },\n  \"Europe/Riga\": {\n    u: 120,\n    d: 180,\n    c: [\"LV\"]\n  },\n  \"Europe/Rome\": {\n    u: 60,\n    d: 120,\n    c: [\"IT\", \"SM\", \"VA\"]\n  },\n  \"Europe/Samara\": {\n    u: 240,\n    c: [\"RU\"]\n  },\n  \"Europe/San_Marino\": {\n    a: \"Europe/Rome\",\n    c: [\"SM\"],\n    r: 1\n  },\n  \"Europe/Sarajevo\": {\n    a: \"Europe/Belgrade\",\n    c: [\"BA\"],\n    r: 1\n  },\n  \"Europe/Saratov\": {\n    u: 240,\n    c: [\"RU\"]\n  },\n  \"Europe/Simferopol\": {\n    u: 180,\n    c: [\"RU\", \"UA\"]\n  },\n  \"Europe/Skopje\": {\n    a: \"Europe/Belgrade\",\n    c: [\"MK\"],\n    r: 1\n  },\n  \"Europe/Sofia\": {\n    u: 120,\n    d: 180,\n    c: [\"BG\"]\n  },\n  \"Europe/Stockholm\": {\n    a: \"Europe/Berlin\",\n    c: [\"SE\"],\n    r: 1\n  },\n  \"Europe/Tallinn\": {\n    u: 120,\n    d: 180,\n    c: [\"EE\"]\n  },\n  \"Europe/Tirane\": {\n    u: 60,\n    d: 120,\n    c: [\"AL\"]\n  },\n  \"Europe/Tiraspol\": {\n    a: \"Europe/Chisinau\",\n    r: 1\n  },\n  \"Europe/Ulyanovsk\": {\n    u: 240,\n    c: [\"RU\"]\n  },\n  \"Europe/Uzhgorod\": {\n    a: \"Europe/Kyiv\",\n    r: 1\n  },\n  \"Europe/Vaduz\": {\n    a: \"Europe/Zurich\",\n    c: [\"LI\"],\n    r: 1\n  },\n  \"Europe/Vatican\": {\n    a: \"Europe/Rome\",\n    c: [\"VA\"],\n    r: 1\n  },\n  \"Europe/Vienna\": {\n    u: 60,\n    d: 120,\n    c: [\"AT\"]\n  },\n  \"Europe/Vilnius\": {\n    u: 120,\n    d: 180,\n    c: [\"LT\"]\n  },\n  \"Europe/Volgograd\": {\n    u: 180,\n    c: [\"RU\"]\n  },\n  \"Europe/Warsaw\": {\n    u: 60,\n    d: 120,\n    c: [\"PL\"]\n  },\n  \"Europe/Zagreb\": {\n    a: \"Europe/Belgrade\",\n    c: [\"HR\"],\n    r: 1\n  },\n  \"Europe/Zaporozhye\": {\n    a: \"Europe/Kyiv\",\n    r: 1\n  },\n  \"Europe/Zurich\": {\n    u: 60,\n    d: 120,\n    c: [\"CH\", \"DE\", \"LI\"]\n  },\n  Factory: {\n    u: 0\n  },\n  GB: {\n    a: \"Europe/London\",\n    c: [\"GB\"],\n    r: 1\n  },\n  \"GB-Eire\": {\n    a: \"Europe/London\",\n    c: [\"GB\"],\n    r: 1\n  },\n  GMT: {\n    a: \"Etc/GMT\",\n    r: 1\n  },\n  \"GMT+0\": {\n    a: \"Etc/GMT\",\n    r: 1\n  },\n  \"GMT-0\": {\n    a: \"Etc/GMT\",\n    r: 1\n  },\n  GMT0: {\n    a: \"Etc/GMT\",\n    r: 1\n  },\n  Greenwich: {\n    a: \"Etc/GMT\",\n    r: 1\n  },\n  HST: {\n    u: -600\n  },\n  Hongkong: {\n    a: \"Asia/Hong_Kong\",\n    r: 1\n  },\n  Iceland: {\n    a: \"Africa/Abidjan\",\n    c: [\"IS\"],\n    r: 1\n  },\n  \"Indian/Antananarivo\": {\n    a: \"Africa/Nairobi\",\n    c: [\"MG\"],\n    r: 1\n  },\n  \"Indian/Chagos\": {\n    u: 360,\n    c: [\"IO\"]\n  },\n  \"Indian/Christmas\": {\n    a: \"Asia/Bangkok\",\n    c: [\"CX\"],\n    r: 1\n  },\n  \"Indian/Cocos\": {\n    a: \"Asia/Yangon\",\n    c: [\"CC\"],\n    r: 1\n  },\n  \"Indian/Comoro\": {\n    a: \"Africa/Nairobi\",\n    c: [\"KM\"],\n    r: 1\n  },\n  \"Indian/Kerguelen\": {\n    a: \"Indian/Maldives\",\n    c: [\"TF\", \"HM\"],\n    r: 1\n  },\n  \"Indian/Mahe\": {\n    a: \"Asia/Dubai\",\n    c: [\"SC\"],\n    r: 1\n  },\n  \"Indian/Maldives\": {\n    u: 300,\n    c: [\"MV\", \"TF\"]\n  },\n  \"Indian/Mauritius\": {\n    u: 240,\n    c: [\"MU\"]\n  },\n  \"Indian/Mayotte\": {\n    a: \"Africa/Nairobi\",\n    c: [\"YT\"],\n    r: 1\n  },\n  \"Indian/Reunion\": {\n    a: \"Asia/Dubai\",\n    c: [\"RE\"],\n    r: 1\n  },\n  Iran: {\n    a: \"Asia/Tehran\",\n    r: 1\n  },\n  Israel: {\n    a: \"Asia/Jerusalem\",\n    r: 1\n  },\n  Jamaica: {\n    a: \"America/Jamaica\",\n    r: 1\n  },\n  Japan: {\n    a: \"Asia/Tokyo\",\n    r: 1\n  },\n  Kwajalein: {\n    a: \"Pacific/Kwajalein\",\n    r: 1\n  },\n  Libya: {\n    a: \"Africa/Tripoli\",\n    r: 1\n  },\n  MET: {\n    u: 60,\n    d: 120\n  },\n  MST: {\n    u: -420\n  },\n  MST7MDT: {\n    u: -420,\n    d: -360\n  },\n  \"Mexico/BajaNorte\": {\n    a: \"America/Tijuana\",\n    r: 1\n  },\n  \"Mexico/BajaSur\": {\n    a: \"America/Mazatlan\",\n    r: 1\n  },\n  \"Mexico/General\": {\n    a: \"America/Mexico_City\",\n    r: 1\n  },\n  NZ: {\n    a: \"Pacific/Auckland\",\n    c: [\"NZ\"],\n    r: 1\n  },\n  \"NZ-CHAT\": {\n    a: \"Pacific/Chatham\",\n    r: 1\n  },\n  Navajo: {\n    a: \"America/Denver\",\n    r: 1\n  },\n  PRC: {\n    a: \"Asia/Shanghai\",\n    r: 1\n  },\n  PST8PDT: {\n    u: -480,\n    d: -420\n  },\n  \"Pacific/Apia\": {\n    u: 780,\n    c: [\"WS\"]\n  },\n  \"Pacific/Auckland\": {\n    u: 720,\n    d: 780,\n    c: [\"NZ\", \"AQ\"]\n  },\n  \"Pacific/Bougainville\": {\n    u: 660,\n    c: [\"PG\"]\n  },\n  \"Pacific/Chatham\": {\n    u: 765,\n    d: 825,\n    c: [\"NZ\"]\n  },\n  \"Pacific/Chuuk\": {\n    a: \"Pacific/Port_Moresby\",\n    c: [\"FM\"],\n    r: 1\n  },\n  \"Pacific/Easter\": {\n    u: -360,\n    d: -300,\n    c: [\"CL\"]\n  },\n  \"Pacific/Efate\": {\n    u: 660,\n    c: [\"VU\"]\n  },\n  \"Pacific/Enderbury\": {\n    a: \"Pacific/Kanton\",\n    r: 1\n  },\n  \"Pacific/Fakaofo\": {\n    u: 780,\n    c: [\"TK\"]\n  },\n  \"Pacific/Fiji\": {\n    u: 720,\n    c: [\"FJ\"]\n  },\n  \"Pacific/Funafuti\": {\n    a: \"Pacific/Tarawa\",\n    c: [\"TV\"],\n    r: 1\n  },\n  \"Pacific/Galapagos\": {\n    u: -360,\n    c: [\"EC\"]\n  },\n  \"Pacific/Gambier\": {\n    u: -540,\n    c: [\"PF\"]\n  },\n  \"Pacific/Guadalcanal\": {\n    u: 660,\n    c: [\"SB\", \"FM\"]\n  },\n  \"Pacific/Guam\": {\n    u: 600,\n    c: [\"GU\", \"MP\"]\n  },\n  \"Pacific/Honolulu\": {\n    u: -600,\n    c: [\"US\", \"UM\"]\n  },\n  \"Pacific/Johnston\": {\n    a: \"Pacific/Honolulu\",\n    c: [\"UM\"],\n    r: 1\n  },\n  \"Pacific/Kanton\": {\n    u: 780,\n    c: [\"KI\"]\n  },\n  \"Pacific/Kiritimati\": {\n    u: 840,\n    c: [\"KI\"]\n  },\n  \"Pacific/Kosrae\": {\n    u: 660,\n    c: [\"FM\"]\n  },\n  \"Pacific/Kwajalein\": {\n    u: 720,\n    c: [\"MH\"]\n  },\n  \"Pacific/Majuro\": {\n    a: \"Pacific/Tarawa\",\n    c: [\"MH\"],\n    r: 1\n  },\n  \"Pacific/Marquesas\": {\n    u: -570,\n    c: [\"PF\"]\n  },\n  \"Pacific/Midway\": {\n    a: \"Pacific/Pago_Pago\",\n    c: [\"UM\"],\n    r: 1\n  },\n  \"Pacific/Nauru\": {\n    u: 720,\n    c: [\"NR\"]\n  },\n  \"Pacific/Niue\": {\n    u: -660,\n    c: [\"NU\"]\n  },\n  \"Pacific/Norfolk\": {\n    u: 660,\n    d: 720,\n    c: [\"NF\"]\n  },\n  \"Pacific/Noumea\": {\n    u: 660,\n    c: [\"NC\"]\n  },\n  \"Pacific/Pago_Pago\": {\n    u: -660,\n    c: [\"AS\", \"UM\"]\n  },\n  \"Pacific/Palau\": {\n    u: 540,\n    c: [\"PW\"]\n  },\n  \"Pacific/Pitcairn\": {\n    u: -480,\n    c: [\"PN\"]\n  },\n  \"Pacific/Pohnpei\": {\n    a: \"Pacific/Guadalcanal\",\n    c: [\"FM\"],\n    r: 1\n  },\n  \"Pacific/Ponape\": {\n    a: \"Pacific/Guadalcanal\",\n    c: [\"FM\"],\n    r: 1\n  },\n  \"Pacific/Port_Moresby\": {\n    u: 600,\n    c: [\"PG\", \"AQ\", \"FM\"]\n  },\n  \"Pacific/Rarotonga\": {\n    u: -600,\n    c: [\"CK\"]\n  },\n  \"Pacific/Saipan\": {\n    a: \"Pacific/Guam\",\n    c: [\"MP\"],\n    r: 1\n  },\n  \"Pacific/Samoa\": {\n    a: \"Pacific/Pago_Pago\",\n    c: [\"AS\"],\n    r: 1\n  },\n  \"Pacific/Tahiti\": {\n    u: -600,\n    c: [\"PF\"]\n  },\n  \"Pacific/Tarawa\": {\n    u: 720,\n    c: [\"KI\", \"MH\", \"TV\", \"UM\", \"WF\"]\n  },\n  \"Pacific/Tongatapu\": {\n    u: 780,\n    c: [\"TO\"]\n  },\n  \"Pacific/Truk\": {\n    a: \"Pacific/Port_Moresby\",\n    c: [\"FM\"],\n    r: 1\n  },\n  \"Pacific/Wake\": {\n    a: \"Pacific/Tarawa\",\n    c: [\"UM\"],\n    r: 1\n  },\n  \"Pacific/Wallis\": {\n    a: \"Pacific/Tarawa\",\n    c: [\"WF\"],\n    r: 1\n  },\n  \"Pacific/Yap\": {\n    a: \"Pacific/Port_Moresby\",\n    c: [\"FM\"],\n    r: 1\n  },\n  Poland: {\n    a: \"Europe/Warsaw\",\n    r: 1\n  },\n  Portugal: {\n    a: \"Europe/Lisbon\",\n    r: 1\n  },\n  ROC: {\n    a: \"Asia/Taipei\",\n    r: 1\n  },\n  ROK: {\n    a: \"Asia/Seoul\",\n    r: 1\n  },\n  Singapore: {\n    a: \"Asia/Singapore\",\n    c: [\"SG\"],\n    r: 1\n  },\n  Turkey: {\n    a: \"Europe/Istanbul\",\n    r: 1\n  },\n  UCT: {\n    a: \"Etc/UTC\",\n    r: 1\n  },\n  \"US/Alaska\": {\n    a: \"America/Anchorage\",\n    r: 1\n  },\n  \"US/Aleutian\": {\n    a: \"America/Adak\",\n    r: 1\n  },\n  \"US/Arizona\": {\n    a: \"America/Phoenix\",\n    c: [\"US\"],\n    r: 1\n  },\n  \"US/Central\": {\n    a: \"America/Chicago\",\n    r: 1\n  },\n  \"US/East-Indiana\": {\n    a: \"America/Indiana/Indianapolis\",\n    r: 1\n  },\n  \"US/Eastern\": {\n    a: \"America/New_York\",\n    r: 1\n  },\n  \"US/Hawaii\": {\n    a: \"Pacific/Honolulu\",\n    c: [\"US\"],\n    r: 1\n  },\n  \"US/Indiana-Starke\": {\n    a: \"America/Indiana/Knox\",\n    r: 1\n  },\n  \"US/Michigan\": {\n    a: \"America/Detroit\",\n    r: 1\n  },\n  \"US/Mountain\": {\n    a: \"America/Denver\",\n    r: 1\n  },\n  \"US/Pacific\": {\n    a: \"America/Los_Angeles\",\n    r: 1\n  },\n  \"US/Samoa\": {\n    a: \"Pacific/Pago_Pago\",\n    c: [\"AS\"],\n    r: 1\n  },\n  UTC: {\n    a: \"Etc/UTC\",\n    r: 1\n  },\n  Universal: {\n    a: \"Etc/UTC\",\n    r: 1\n  },\n  \"W-SU\": {\n    a: \"Europe/Moscow\",\n    r: 1\n  },\n  WET: {\n    u: 0,\n    d: 60\n  },\n  Zulu: {\n    a: \"Etc/UTC\",\n    r: 1\n  }\n};\nvar data = {\n  countries: countries$1,\n  timezones: timezones$1\n};\nvar timezonesMap;\nfunction buildCountry(data, id) {\n  var name = data.countries[id];\n  if (!name) return null;\n  var tzMap = getTimezonesMap(data)[id] || {};\n  return {\n    id: id,\n    name: name,\n    timezones: tzMap.current || [],\n    allTimezones: tzMap.all || []\n  };\n}\nfunction getTimezonesMap(data) {\n  if (!timezonesMap) timezonesMap = buildTimezonesMap(data);\n  return timezonesMap;\n}\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce(function (result, id) {\n    var tz = data.timezones[id];\n    var c = tz.c,\n      a = tz.a;\n    var aliasTz = data.timezones[a] || {};\n    var countries = c || aliasTz.c;\n    if (!countries) return result;\n    countries.forEach(function (country) {\n      if (!result[country]) Object.assign(result, _defineProperty({}, country, {\n        current: [],\n        all: []\n      }));\n      if (tz.r === undefined) result[country].current.push(id);\n      result[country].all.push(id);\n    });\n    return result;\n  }, {});\n}\nfunction buildTimezone(data, name) {\n  var timezone = data.timezones[name];\n  if (!timezone) return null;\n  var _timezone$a = timezone.a,\n    aliasOf = _timezone$a === void 0 ? null : _timezone$a;\n  var aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  var tz = _objectSpread2(_objectSpread2({}, aliasTz), data.timezones[name]);\n  var countries = tz.c || [];\n  var utcOffset = tz.u;\n  var dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n  var result = {\n    name: name,\n    countries: countries,\n    utcOffset: utcOffset,\n    utcOffsetStr: getOffsetStr(utcOffset),\n    dstOffset: dstOffset,\n    dstOffsetStr: getOffsetStr(dstOffset),\n    aliasOf: aliasOf\n  };\n  if (timezone.r) result.deprecated = true;\n  return result;\n}\nfunction getOffsetStr(offset) {\n  var hours = Math.floor(offset / 60);\n  var min = offset % 60;\n  var sign = offset < 0 ? '-' : '+';\n  return \"\".concat(sign).concat(getNumStr(hours), \":\").concat(getNumStr(min));\n}\nfunction getNumStr(input) {\n  var num = Math.abs(input);\n  var prefix = num < 10 ? '0' : '';\n  return \"\".concat(prefix).concat(num);\n}\nvar _excluded = [\"allTimezones\"];\nvar totalTimezones = Object.keys(data.timezones).length;\nvar countries = {};\nvar timezones = {};\nvar memoizedTimezones = 0;\nfunction getAllCountries() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.keys(data.countries).reduce(function (prev, id) {\n    return Object.assign(prev, _defineProperty({}, id, getCountry(id, options)));\n  }, {});\n}\nfunction getAllTimezones() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);\n  return deliverTimezones(timezones, options);\n}\nfunction getCountry(id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return deliverCountry(countries[id], options);\n}\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n}\nfunction getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? _objectSpread2({}, timezones[name]) : null;\n}\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\nfunction getCountriesForTimezone(tzName) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var timezone = getTimezone(tzName) || {};\n  var values = timezone.countries || [];\n  return values.map(function (c) {\n    return getCountry(c, options);\n  });\n}\nfunction getCountryForTimezone(tzName) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _getCountriesForTimez = getCountriesForTimezone(tzName, options),\n    _getCountriesForTimez2 = _slicedToArray(_getCountriesForTimez, 1),\n    main = _getCountriesForTimez2[0];\n  return main || null;\n}\nfunction getTimezonesForCountry(countryId) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var country = getCountry(countryId, options);\n  if (!country) return null;\n  var values = country.timezones || [];\n  return values.map(getTimezone);\n}\nfunction deliverTimezones(tzs, options) {\n  var _ref = options || {},\n    deprecated = _ref.deprecated;\n  if (deprecated === true) return tzs;\n  return Object.keys(tzs).reduce(function (prev, key) {\n    if (!tzs[key].deprecated) Object.assign(prev, _defineProperty({}, key, tzs[key]));\n    return prev;\n  }, {});\n}\nfunction deliverCountry(country, options) {\n  if (!country) return null;\n  var _ref2 = options || {},\n    deprecated = _ref2.deprecated;\n  country.allTimezones;\n  var other = _objectWithoutProperties(country, _excluded);\n  var tz = deprecated ? country.allTimezones : country.timezones;\n  return _objectSpread2(_objectSpread2({}, other), {}, {\n    timezones: tz\n  });\n}\nvar index = {\n  getCountry: getCountry,\n  getTimezone: getTimezone,\n  getAllCountries: getAllCountries,\n  getAllTimezones: getAllTimezones,\n  getTimezonesForCountry: getTimezonesForCountry,\n  getCountriesForTimezone: getCountriesForTimezone,\n  getCountryForTimezone: getCountryForTimezone\n};\nexport { index as default, getAllCountries, getAllTimezones, getCountriesForTimezone, getCountry, getCountryForTimezone, getTimezone, getTimezonesForCountry };","map":{"version":3,"names":["timezonesMap","buildCountry","data","id","name","countries","tzMap","getTimezonesMap","timezones","current","allTimezones","all","buildTimezonesMap","Object","keys","reduce","result","tz","c","a","aliasTz","forEach","country","assign","_defineProperty","r","undefined","push","buildTimezone","timezone","_timezone$a","aliasOf","_objectSpread2","utcOffset","u","dstOffset","Number","isInteger","d","utcOffsetStr","getOffsetStr","dstOffsetStr","deprecated","offset","hours","Math","floor","min","sign","concat","getNumStr","input","num","abs","prefix","totalTimezones","length","memoizedTimezones","getAllCountries","options","arguments","prev","getCountry","getAllTimezones","getTimezone","deliverTimezones","memoizeCountry","deliverCountry","memoizeTimezone","getCountriesForTimezone","tzName","values","map","getCountryForTimezone","_getCountriesForTimez","_getCountriesForTimez2","_slicedToArray","main","getTimezonesForCountry","countryId","tzs","_ref","key","_ref2","other","_objectWithoutProperties","_excluded","index"],"sources":["/Users/nikodemzareba/Desktop/weather-app/weather-app-frontend/node_modules/countries-and-timezones/src/build-country.js","/Users/nikodemzareba/Desktop/weather-app/weather-app-frontend/node_modules/countries-and-timezones/src/build-timezone.js","/Users/nikodemzareba/Desktop/weather-app/weather-app-frontend/node_modules/countries-and-timezones/src/index.js"],"sourcesContent":["let timezonesMap;\n\nexport default function buildCountry(data, id) {\n  const name = data.countries[id];\n  if (!name) return null;\n\n  const tzMap = getTimezonesMap(data)[id] || {};\n\n  return {\n    id,\n    name,\n    timezones: tzMap.current || [],\n    allTimezones: tzMap.all || [],\n  };\n}\n\nfunction getTimezonesMap(data) {\n  if (!timezonesMap) timezonesMap = buildTimezonesMap(data);\n  return timezonesMap;\n}\n\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce((result, id) => {\n    const tz = data.timezones[id];\n    const { c, a } = tz;\n    const aliasTz = data.timezones[a] || {};\n    const countries = c || aliasTz.c;\n\n    if (!countries) return result;\n\n    countries.forEach((country) => {\n      if (!result[country]) Object.assign(result, { [country]: { current: [], all: [] } });\n      if (tz.r === undefined) result[country].current.push(id);\n      result[country].all.push(id);\n    });\n\n    return result;\n  }, {});\n}\n","export default function buildTimezone(data, name) {\n  const timezone = data.timezones[name];\n  if (!timezone) return null;\n\n  const { a: aliasOf = null } = timezone;\n  const aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  const tz = {\n    ...aliasTz,\n    ...data.timezones[name],\n  };\n\n  const countries = tz.c || [];\n  const utcOffset = tz.u;\n  const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n\n  const result = {\n    name,\n    countries,\n    utcOffset,\n    utcOffsetStr: getOffsetStr(utcOffset),\n    dstOffset,\n    dstOffsetStr: getOffsetStr(dstOffset),\n    aliasOf,\n  };\n  if (timezone.r) result.deprecated = true;\n  return result;\n}\n\nfunction getOffsetStr(offset) {\n  const hours = Math.floor(offset / 60);\n  const min = offset % 60;\n  const sign = offset < 0 ? '-' : '+';\n\n  return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;\n}\n\nfunction getNumStr(input) {\n  const num = Math.abs(input);\n  const prefix = num < 10 ? '0' : '';\n  return `${prefix}${num}`;\n}\n","import data from './data.json';\nimport buildCountry from './build-country';\nimport buildTimezone from './build-timezone';\n\nconst totalTimezones = Object.keys(data.timezones).length;\nconst countries = {};\nconst timezones = {};\nlet memoizedTimezones = 0;\n\nexport function getAllCountries(options = {}) {\n  return Object.keys(data.countries).reduce((prev, id) => {\n    return Object.assign(prev, { [id]: getCountry(id, options) });\n  }, {});\n}\n\nexport function getAllTimezones(options = {}) {\n  if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);\n  return deliverTimezones(timezones, options);\n}\n\nexport function getCountry(id, options = {}) {\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return deliverCountry(countries[id], options);\n}\n\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n}\n\nexport function getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? { ...timezones[name] } : null;\n}\n\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\n\nexport function getCountriesForTimezone(tzName, options = {}) {\n  const timezone = getTimezone(tzName) || {};\n  const values = timezone.countries || [];\n  return values.map((c) => getCountry(c, options));\n}\n\nexport function getCountryForTimezone(tzName, options = {}) {\n  const [main] = getCountriesForTimezone(tzName, options);\n  return main || null;\n}\n\nexport function getTimezonesForCountry(countryId, options = {}) {\n  const country = getCountry(countryId, options);\n  if (!country) return null;\n  const values = country.timezones || [];\n  return values.map(getTimezone);\n}\n\nfunction deliverTimezones(tzs, options) {\n  const { deprecated } = options || {};\n  if (deprecated === true) return tzs;\n  return Object.keys(tzs).reduce((prev, key) => {\n    if (!tzs[key].deprecated) Object.assign(prev, { [key]: tzs[key] });\n    return prev;\n  }, {});\n}\n\nfunction deliverCountry(country, options) {\n  if (!country) return null;\n  const { deprecated } = options || {};\n  const { allTimezones, ...other } = country;\n  const tz = deprecated ? country.allTimezones : country.timezones;\n  return { ...other, timezones: tz };\n}\n\nexport default {\n  getCountry,\n  getTimezone,\n  getAllCountries,\n  getAllTimezones,\n  getTimezonesForCountry,\n  getCountriesForTimezone,\n  getCountryForTimezone,\n};\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}