{"ast":null,"code":"var _jsxFileName = \"/Users/nikodemzareba/Desktop/weather-app/weather-app-frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { GoogleMap, Marker, LoadScript } from '@react-google-maps/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [mapCenter, setMapCenter] = useState(null);\n  const [photos, setPhotos] = useState([]);\n  const apiUrl = 'http://localhost:8000/api/weather';\n  const unsplashAccessKey = 'YOUR_UNSPLASH_ACCESS_KEY';\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        if (selectedLocation) {\n          const response = await axios.get(`${apiUrl}/${selectedLocation}`);\n          setWeatherData(response.data);\n          updateMap(response.data.location.name);\n          fetchPhotos(selectedLocation);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchWeatherData();\n  }, [selectedLocation]);\n  const handleLocationChange = selectedOption => {\n    if (selectedOption) {\n      setSelectedLocation(selectedOption.value);\n    } else {\n      setSelectedLocation(null);\n    }\n  };\n  const updateMap = async location => {\n    try {\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(location)}`);\n      if (response.data.length > 0) {\n        const {\n          lat,\n          lon\n        } = response.data[0];\n        setMapCenter({\n          lat: parseFloat(lat),\n          lng: parseFloat(lon)\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchPhotos = async location => {\n    try {\n      const response = await axios.get(`https://api.unsplash.com/search/photos?query=${encodeURIComponent(location)}&client_id=${unsplashAccessKey}`);\n      setPhotos(response.data.results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const cities = [{\n    value: 'london',\n    label: 'London'\n  }, {\n    value: 'manchester',\n    label: 'Manchester'\n  }, {\n    value: 'birmingham',\n    label: 'Birmingham'\n  }, {\n    value: 'glasgow',\n    label: 'Glasgow'\n  }, {\n    value: 'liverpool',\n    label: 'Liverpool'\n  }\n  // Add more cities as needed\n  ];\n\n  const googleMapsApiKey = 'YOUR_GOOGLE_MAPS_API_KEY';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weather App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"register-button\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Current Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card\",\n          children: weatherData && weatherData.current ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: weatherData.location.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"weather-time\",\n              children: new Date(weatherData.current.last_updated).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-details\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weather-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: weatherData.current.condition.icon,\n                  alt: weatherData.current.condition.text,\n                  className: \"weather-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"condition\",\n                  children: weatherData.current.condition.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"temperature\",\n                  children: [weatherData.current.temp_c, \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"humidity\",\n                  children: [\"Humidity: \", weatherData.current.humidity, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"pressure\",\n                  children: [\"Pressure: \", weatherData.current.pressure_mb, \" mb\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"wind\",\n                  children: [\"Wind: \", weatherData.current.wind_kph, \" km/h\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"uv\",\n                  children: [\"UV Index: \", weatherData.current.uv]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select a location\",\n            options: cities,\n            onChange: handleLocationChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: mapCenter && /*#__PURE__*/_jsxDEV(LoadScript, {\n          googleMapsApiKey: googleMapsApiKey,\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            center: mapCenter,\n            zoom: 12,\n            mapContainerStyle: {\n              height: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Marker, {\n              position: mapCenter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photos-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Photos of \", selectedLocation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photos-grid\",\n          children: photos.map(photo => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: photo.urls.regular,\n            alt: \"City\",\n            className: \"photo\"\n          }, photo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rnDLT0POQAAOJHCxvdsDzymrW+w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Select","GoogleMap","Marker","LoadScript","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","weatherData","setWeatherData","selectedLocation","setSelectedLocation","mapCenter","setMapCenter","photos","setPhotos","apiUrl","unsplashAccessKey","fetchWeatherData","response","get","data","updateMap","location","name","fetchPhotos","error","console","handleLocationChange","selectedOption","value","encodeURIComponent","length","lat","lon","parseFloat","lng","results","cities","label","googleMapsApiKey","className","children","fileName","_jsxFileName","lineNumber","columnNumber","current","Date","last_updated","toLocaleTimeString","src","condition","icon","alt","text","temp_c","humidity","pressure_mb","wind_kph","uv","placeholder","options","onChange","center","zoom","mapContainerStyle","height","position","map","photo","urls","regular","id","_c","$RefreshReg$"],"sources":["/Users/nikodemzareba/Desktop/weather-app/weather-app-frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { GoogleMap, Marker, LoadScript } from '@react-google-maps/api';\nimport './App.css';\n\ninterface WeatherData {\n  location: {\n    name: string;\n  };\n  current: {\n    temp_c: number;\n    condition: {\n      text: string;\n      icon: string;\n    };\n    humidity: number;\n    pressure_mb: number;\n    last_updated: string;\n    wind_kph: number;\n    uv: number;\n  };\n}\n\ninterface CityOption {\n  value: string;\n  label: string;\n}\n\ninterface Photo {\n  id: string;\n  urls: {\n    regular: string;\n  };\n}\n\nconst App: React.FC = () => {\n  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);\n  const [selectedLocation, setSelectedLocation] = useState<string | null>(null);\n  const [mapCenter, setMapCenter] = useState<{ lat: number; lng: number } | null>(null);\n  const [photos, setPhotos] = useState<Photo[]>([]);\n  const apiUrl: string = 'http://localhost:8000/api/weather';\n  const unsplashAccessKey: string = 'YOUR_UNSPLASH_ACCESS_KEY';\n\n  useEffect(() => {\n    const fetchWeatherData = async (): Promise<void> => {\n      try {\n        if (selectedLocation) {\n          const response = await axios.get<WeatherData>(`${apiUrl}/${selectedLocation}`);\n          setWeatherData(response.data);\n          updateMap(response.data.location.name);\n          fetchPhotos(selectedLocation);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchWeatherData();\n  }, [selectedLocation]);\n\n  const handleLocationChange = (selectedOption: CityOption | null) => {\n    if (selectedOption) {\n      setSelectedLocation(selectedOption.value);\n    } else {\n      setSelectedLocation(null);\n    }\n  };\n\n  const updateMap = async (location: string) => {\n    try {\n      const response = await axios.get(\n        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\n          location\n        )}`\n      );\n      if (response.data.length > 0) {\n        const { lat, lon } = response.data[0];\n        setMapCenter({ lat: parseFloat(lat), lng: parseFloat(lon) });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchPhotos = async (location: string) => {\n    try {\n      const response = await axios.get<Photo[]>(\n        `https://api.unsplash.com/search/photos?query=${encodeURIComponent(\n          location\n        )}&client_id=${unsplashAccessKey}`\n      );\n      setPhotos(response.data.results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const cities: CityOption[] = [\n    { value: 'london', label: 'London' },\n    { value: 'manchester', label: 'Manchester' },\n    { value: 'birmingham', label: 'Birmingham' },\n    { value: 'glasgow', label: 'Glasgow' },\n    { value: 'liverpool', label: 'Liverpool' },\n    // Add more cities as needed\n  ];\n\n  const googleMapsApiKey = 'YOUR_GOOGLE_MAPS_API_KEY';\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <div className=\"app-title\">\n          <h1>Weather App</h1>\n        </div>\n        <div className=\"auth-container\">\n          <div className=\"auth-buttons\">\n            <button className=\"login-button\">Login</button>\n            <button className=\"register-button\">Register</button>\n          </div>\n        </div>\n      </header>\n      <div className=\"app-content\">\n        <div className=\"weather-container\">\n          <h2>Current Weather</h2>\n          <div className=\"weather-card\">\n            {weatherData && weatherData.current ? (\n              <>\n                <h3>{weatherData.location.name}</h3>\n                <p className=\"weather-time\">{new Date(weatherData.current.last_updated).toLocaleTimeString()}</p>\n                <div className=\"weather-details\">\n                  <div className=\"weather-info\">\n                    <img src={weatherData.current.condition.icon} alt={weatherData.current.condition.text} className=\"weather-icon\" />\n                    <p className=\"condition\">{weatherData.current.condition.text}</p>\n                    <p className=\"temperature\">{weatherData.current.temp_c}°C</p>\n                    <p className=\"humidity\">Humidity: {weatherData.current.humidity}%</p>\n                    <p className=\"pressure\">Pressure: {weatherData.current.pressure_mb} mb</p>\n                    <p className=\"wind\">Wind: {weatherData.current.wind_kph} km/h</p>\n                    <p className=\"uv\">UV Index: {weatherData.current.uv}</p>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div>Loading...</div>\n            )}\n          </div>\n          <div className=\"location-dropdown\">\n            <Select\n              placeholder=\"Select a location\"\n              options={cities}\n              onChange={handleLocationChange}\n            />\n          </div>\n        </div>\n        <div className=\"map-container\">\n          {mapCenter && (\n            <LoadScript googleMapsApiKey={googleMapsApiKey}>\n              <GoogleMap center={mapCenter} zoom={12} mapContainerStyle={{ height: '400px' }}>\n                <Marker position={mapCenter} />\n              </GoogleMap>\n            </LoadScript>\n          )}\n        </div>\n        <div className=\"photos-container\">\n          <h2>Photos of {selectedLocation}</h2>\n          <div className=\"photos-grid\">\n            {photos.map((photo) => (\n              <img key={photo.id} src={photo.urls.regular} alt=\"City\" className=\"photo\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}