{"ast":null,"code":"var _jsxFileName = \"/Users/nikodemzareba/Desktop/weather-app/weather-app-frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { GoogleMap, Marker, LoadScript } from '@react-google-maps/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [mapCenter, setMapCenter] = useState(null);\n  const apiUrl = 'http://localhost:8000/api/weather';\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        if (selectedLocation) {\n          const response = await axios.get(`${apiUrl}/${selectedLocation}`);\n          setWeatherData(response.data);\n          updateMap(response.data.location.name);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchWeatherData();\n  }, [selectedLocation]);\n  const handleLocationChange = selectedOption => {\n    if (selectedOption) {\n      setSelectedLocation(selectedOption.value);\n      setSelectedCity(selectedOption.label);\n    } else {\n      setSelectedLocation(null);\n      setSelectedCity(null);\n    }\n  };\n  const updateMap = async location => {\n    try {\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(location)}`);\n      if (response.data.length > 0) {\n        const {\n          lat,\n          lon\n        } = response.data[0];\n        setMapCenter({\n          lat: parseFloat(lat),\n          lng: parseFloat(lon)\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const cities = [{\n    value: 'london',\n    label: 'London'\n  }, {\n    value: 'manchester',\n    label: 'Manchester'\n  }, {\n    value: 'birmingham',\n    label: 'Birmingham'\n  }, {\n    value: 'glasgow',\n    label: 'Glasgow'\n  }, {\n    value: 'liverpool',\n    label: 'Liverpool'\n  }\n  // Add more cities as needed\n  ];\n\n  const googleMapsApiKey = 'AIzaSyAXwHWvvYlGz9rarjPyXZHh8O8ZMAQhMNs';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-dropdown\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select a location\",\n          options: cities,\n          onChange: handleLocationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-container\",\n        children: weatherData && weatherData.current && weatherData.forecast && weatherData.forecast.forecastday.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-weather\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Current Weather\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: weatherData.location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"temperature\",\n                children: [weatherData.current.temp_c, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"condition\",\n                children: weatherData.current.condition.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"10-Day Weather Forecast for \", selectedCity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-list\",\n              children: weatherData.forecast.forecastday.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forecast-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"date\",\n                  children: day.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: day.day.condition.icon,\n                  alt: day.day.condition.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"temperature\",\n                  children: [\"Max: \", day.day.maxtemp_c, \"\\xB0C | Min: \", day.day.mintemp_c, \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"condition\",\n                  children: day.day.condition.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)]\n              }, day.date, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: mapCenter && /*#__PURE__*/_jsxDEV(LoadScript, {\n          googleMapsApiKey: googleMapsApiKey,\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            center: mapCenter,\n            zoom: 12,\n            mapContainerStyle: {\n              height: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Marker, {\n              position: mapCenter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QMVR9q9al+UGTkZfzNB6G1Ms5QA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Select","GoogleMap","Marker","LoadScript","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","weatherData","setWeatherData","selectedLocation","setSelectedLocation","selectedCity","setSelectedCity","mapCenter","setMapCenter","apiUrl","fetchWeatherData","response","get","data","updateMap","location","name","error","console","handleLocationChange","selectedOption","value","label","encodeURIComponent","length","lat","lon","parseFloat","lng","cities","googleMapsApiKey","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","options","onChange","current","forecast","forecastday","temp_c","condition","text","map","day","date","src","icon","alt","maxtemp_c","mintemp_c","center","zoom","mapContainerStyle","height","position","_c","$RefreshReg$"],"sources":["/Users/nikodemzareba/Desktop/weather-app/weather-app-frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { GoogleMap, Marker, LoadScript } from '@react-google-maps/api';\nimport './App.css';\n\ninterface WeatherData {\n  location: {\n    name: string;\n  };\n  current: {\n    temp_c: number;\n    condition: {\n      text: string;\n    };\n  };\n  forecast: {\n    forecastday: {\n      date: string;\n      day: {\n        maxtemp_c: number;\n        mintemp_c: number;\n        condition: {\n          text: string;\n          icon: string;\n        };\n      };\n    }[];\n  };\n}\n\ninterface CityOption {\n  value: string;\n  label: string;\n}\n\nconst App: React.FC = () => {\n  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);\n  const [selectedLocation, setSelectedLocation] = useState<string | null>(null);\n  const [selectedCity, setSelectedCity] = useState<string | null>(null);\n  const [mapCenter, setMapCenter] = useState<{ lat: number; lng: number } | null>(null);\n  const apiUrl: string = 'http://localhost:8000/api/weather';\n\n  useEffect(() => {\n    const fetchWeatherData = async (): Promise<void> => {\n      try {\n        if (selectedLocation) {\n          const response = await axios.get<WeatherData>(`${apiUrl}/${selectedLocation}`);\n          setWeatherData(response.data);\n          updateMap(response.data.location.name);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchWeatherData();\n  }, [selectedLocation]);\n\n  const handleLocationChange = (selectedOption: CityOption | null) => {\n    if (selectedOption) {\n      setSelectedLocation(selectedOption.value);\n      setSelectedCity(selectedOption.label);\n    } else {\n      setSelectedLocation(null);\n      setSelectedCity(null);\n    }\n  };\n\n  const updateMap = async (location: string) => {\n    try {\n      const response = await axios.get(\n        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\n          location\n        )}`\n      );\n      if (response.data.length > 0) {\n        const { lat, lon } = response.data[0];\n        setMapCenter({ lat: parseFloat(lat), lng: parseFloat(lon) });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const cities: CityOption[] = [\n    { value: 'london', label: 'London' },\n    { value: 'manchester', label: 'Manchester' },\n    { value: 'birmingham', label: 'Birmingham' },\n    { value: 'glasgow', label: 'Glasgow' },\n    { value: 'liverpool', label: 'Liverpool' },\n    // Add more cities as needed\n  ];\n\n  const googleMapsApiKey = 'AIzaSyAXwHWvvYlGz9rarjPyXZHh8O8ZMAQhMNs';\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <h1>Weather App</h1>\n        <div className=\"location-dropdown\">\n          <Select\n            placeholder=\"Select a location\"\n            options={cities}\n            onChange={handleLocationChange}\n          />\n        </div>\n      </header>\n      <main className=\"app-content\">\n        <div className=\"weather-container\">\n          {weatherData && weatherData.current && weatherData.forecast && weatherData.forecast.forecastday.length > 0 ? (\n            <>\n              <div className=\"current-weather\">\n                <h2>Current Weather</h2>\n                <div className=\"weather-card\">\n                  <h3>{weatherData.location.name}</h3>\n                  <p className=\"temperature\">{weatherData.current.temp_c}°C</p>\n                  <p className=\"condition\">{weatherData.current.condition.text}</p>\n                </div>\n              </div>\n              <div className=\"forecast\">\n                <h2>10-Day Weather Forecast for {selectedCity}</h2>\n                <div className=\"forecast-list\">\n                  {weatherData.forecast.forecastday.map((day) => (\n                    <div key={day.date} className=\"forecast-item\">\n                      <p className=\"date\">{day.date}</p>\n                      <img src={day.day.condition.icon} alt={day.day.condition.text} />\n                      <p className=\"temperature\">\n                        Max: {day.day.maxtemp_c}°C | Min: {day.day.mintemp_c}°C\n                      </p>\n                      <p className=\"condition\">{day.day.condition.text}</p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </>\n          ) : (\n            <div>Loading...</div>\n          )}\n        </div>\n        <div className=\"map-container\">\n          {mapCenter && (\n            <LoadScript googleMapsApiKey={googleMapsApiKey}>\n              <GoogleMap center={mapCenter} zoom={12} mapContainerStyle={{ height: '400px' }}>\n                <Marker position={mapCenter} />\n              </GoogleMap>\n            </LoadScript>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}