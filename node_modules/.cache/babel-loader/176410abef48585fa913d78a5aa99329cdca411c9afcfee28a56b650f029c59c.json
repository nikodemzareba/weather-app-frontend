{"ast":null,"code":"var _jsxFileName = \"/Users/nikodemzareba/Desktop/weather-app/weather-app-frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { getAllTimezones, getCountryForTimezone } from 'countries-and-timezones';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const apiUrl = 'http://localhost:8000/api/weather';\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        if (selectedLocation) {\n          const response = await axios.get(`${apiUrl}?location=${selectedLocation}`);\n          setWeatherData(response.data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchWeatherData();\n  }, [selectedLocation]);\n  const handleLocationChange = selectedOption => {\n    setSelectedLocation(selectedOption.value);\n  };\n\n  // Get all timezones and extract cities from their names\n  const timezones = Object.values(getAllTimezones());\n  const cities = timezones.map(timezone => {\n    const country = getCountryForTimezone(timezone.name);\n    const countryName = country ? country.name : 'Unknown Country'; // Handle missing country\n    return {\n      value: timezone.name,\n      label: `${timezone.city}, ${countryName}`\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-dropdown\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select a location\",\n          options: cities,\n          onChange: handleLocationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), weatherData && weatherData.current ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Current Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: weatherData.location.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"temperature\",\n            children: [weatherData.current.temp_c, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"condition\",\n            children: weatherData.current.condition.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Powered by React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DFElSeQptr58ksY7Ele1I7RK+fY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Select","getAllTimezones","getCountryForTimezone","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","selectedLocation","setSelectedLocation","apiUrl","fetchWeatherData","response","get","data","error","console","handleLocationChange","selectedOption","value","timezones","Object","values","cities","map","timezone","country","name","countryName","label","city","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","options","onChange","current","location","temp_c","condition","text","_c","$RefreshReg$"],"sources":["/Users/nikodemzareba/Desktop/weather-app/weather-app-frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { getAllTimezones, getCountryForTimezone } from 'countries-and-timezones';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [weatherData, setWeatherData] = useState<any | null>(null);\n  const [selectedLocation, setSelectedLocation] = useState<string | null>(null);\n  const apiUrl: string = 'http://localhost:8000/api/weather';\n\n  useEffect(() => {\n    const fetchWeatherData = async (): Promise<void> => {\n      try {\n        if (selectedLocation) {\n          const response = await axios.get(`${apiUrl}?location=${selectedLocation}`);\n          setWeatherData(response.data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchWeatherData();\n  }, [selectedLocation]);\n\n  const handleLocationChange = (selectedOption: any) => {\n    setSelectedLocation(selectedOption.value);\n  };\n\n  // Get all timezones and extract cities from their names\n  const timezones = Object.values(getAllTimezones());\n  const cities = timezones.map((timezone: any) => {\n    const country = getCountryForTimezone(timezone.name);\n    const countryName = country ? country.name : 'Unknown Country'; // Handle missing country\n    return {\n      value: timezone.name,\n      label: `${timezone.city}, ${countryName}`,\n    };\n  });\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <h1>Weather App</h1>\n      </header>\n      <main className=\"app-content\">\n        <div className=\"location-dropdown\">\n          <Select\n            placeholder=\"Select a location\"\n            options={cities}\n            onChange={handleLocationChange}\n          />\n        </div>\n        {weatherData && weatherData.current ? (\n          <div>\n            <h2>Current Weather</h2>\n            <div className=\"weather-card\">\n              <h3>{weatherData.location.name}</h3>\n              <p className=\"temperature\">{weatherData.current.temp_c}Â°C</p>\n              <p className=\"condition\">{weatherData.current.condition.text}</p>\n            </div>\n          </div>\n        ) : (\n          <div>Loading...</div>\n        )}\n      </main>\n      <footer className=\"app-footer\">\n        <p>Powered by React</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}